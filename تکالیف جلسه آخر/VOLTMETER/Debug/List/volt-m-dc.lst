
AVRASM ver. 2.1.30  D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm Sat Dec 18 23:07:24 2021

D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0040 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3d56
00002b 3225
00002c 322e
00002d 0066      	.DB  0x56,0x3D,0x25,0x32,0x2E,0x32,0x66,0x0
00002e 0056      	.DB  0x56,0x0
                 _0x2000003:
00002f c080      	.DB  0x80,0xC0
                 _0x2020000:
000030 4e2d
000031 4e41
D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1127): warning: .cseg .db misalignment - padding zero byte
000032 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1129): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x20A0000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\projectschool _c\VOLTMETER\Debug\List\volt-m-dc.asm(1132): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000039 0002      	.DW  0x02
00003a 0160      	.DW  __base_y_G100
00003b 005e      	.DW  _0x2000003*2
                 
00003c 0001      	.DW  0x01
00003d 0164      	.DW  __seed_G105
00003e 0066      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00003f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000040 94f8      	CLI
000041 27ee      	CLR  R30
000042 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000043 e0f1      	LDI  R31,1
000044 bffb      	OUT  GICR,R31
000045 bfeb      	OUT  GICR,R30
000046 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000047 e08d      	LDI  R24,(14-2)+1
000048 e0a2      	LDI  R26,2
000049 27bb      	CLR  R27
                 __CLEAR_REG:
00004a 93ed      	ST   X+,R30
00004b 958a      	DEC  R24
00004c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004e e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000053 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000054 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000055 9185      	LPM  R24,Z+
000056 9195      	LPM  R25,Z+
000057 9700      	SBIW R24,0
000058 f061      	BREQ __GLOBAL_INI_END
000059 91a5      	LPM  R26,Z+
00005a 91b5      	LPM  R27,Z+
00005b 9005      	LPM  R0,Z+
00005c 9015      	LPM  R1,Z+
00005d 01bf      	MOVW R22,R30
00005e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005f 9005      	LPM  R0,Z+
000060 920d      	ST   X+,R0
000061 9701      	SBIW R24,1
000062 f7e1      	BRNE __GLOBAL_INI_LOOP
000063 01fb      	MOVW R30,R22
000064 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000065 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000066 bfed      	OUT  SPL,R30
000067 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000068 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000069 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006a e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006b 940c 007a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;
                 ;#include <mega16a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000A ADMUX=adc_input | ADC_VREF_TYPE;
00006d 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00006e 81e8      	LD   R30,Y
00006f b9e7      	OUT  0x7,R30
                 ; 0000 000B delay_us(10);
                +
000070 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000071 958a     +DEC R24
000072 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 000C ADCSRA|=(1<<ADSC);
000073 9a36      	SBI  0x6,6
                 ; 0000 000D while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000074 9b34      	SBIS 0x6,4
000075 cffe      	RJMP _0x3
                 ; 0000 000E ADCSRA|=(1<<ADIF);
000076 9a34      	SBI  0x6,4
                 ; 0000 000F return ADCW;
000077 b1e4      	IN   R30,0x4
000078 b1f5      	IN   R31,0x4+1
000079 c0fd      	RJMP _0x20C0006
                 ; 0000 0010 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0013 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0014  float i , volt , voltage ;
                 ; 0000 0015  unsigned char lcd[16];
                 ; 0000 0016 
                 ; 0000 0017 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007a 976c      	SBIW R28,28
                 ;	i -> Y+24
                 ;	volt -> Y+20
                 ;	voltage -> Y+16
                 ;	lcd -> Y+0
00007b e0e0      	LDI  R30,LOW(0)
00007c bbea      	OUT  0x1A,R30
                 ; 0000 0018 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00007d bbeb      	OUT  0x1B,R30
                 ; 0000 0019 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00007e efef      	LDI  R30,LOW(255)
00007f bbe4      	OUT  0x14,R30
                 ; 0000 001A PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000080 e0e0      	LDI  R30,LOW(0)
000081 bbe5      	OUT  0x15,R30
                 ; 0000 001B 
                 ; 0000 001C ADMUX=ADC_VREF_TYPE;
000082 b9e7      	OUT  0x7,R30
                 ; 0000 001D ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
000083 e8e5      	LDI  R30,LOW(133)
000084 b9e6      	OUT  0x6,R30
                 ; 0000 001E SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000085 e0e0      	LDI  R30,LOW(0)
000086 bfe0      	OUT  0x30,R30
                 ; 0000 001F 
                 ; 0000 0020 lcd_init(16);
000087 e1a0      	LDI  R26,LOW(16)
000088 d0c2      	RCALL _lcd_init
                 ; 0000 0021 
                 ; 0000 0022 while (1)
                 _0x6:
                 ; 0000 0023       {
                 ; 0000 0024       i=read_adc(0);
000089 e0a0      	LDI  R26,LOW(0)
00008a dfe2      	RCALL _read_adc
00008b 2766      	CLR  R22
00008c 2777      	CLR  R23
00008d 940e 075f 	CALL __CDF1
                +
00008f 8fe8     +STD Y + 24 , R30
000090 8ff9     +STD Y + 24 + 1 , R31
000091 8f6a     +STD Y + 24 + 2 , R22
000092 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0000 0025       volt=(i*5)/1023 ;
                +
000093 8da8     +LDD R26 , Y + 24
000094 8db9     +LDD R27 , Y + 24 + 1
000095 8d8a     +LDD R24 , Y + 24 + 2
000096 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
                +
000097 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000098 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000099 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
00009a e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
00009b 940e 07e9 	CALL __MULF12
00009d 01df      	MOVW R26,R30
00009e 01cb      	MOVW R24,R22
                +
00009f e0e0     +LDI R30 , LOW ( 0x447FC000 )
0000a0 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
0000a1 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
0000a2 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
0000a3 940e 0837 	CALL __DIVF21
                +
0000a5 8bec     +STD Y + 20 , R30
0000a6 8bfd     +STD Y + 20 + 1 , R31
0000a7 8b6e     +STD Y + 20 + 2 , R22
0000a8 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
                 ; 0000 0026       voltage=(volt*10)+volt ;
                +
0000a9 89ac     +LDD R26 , Y + 20
0000aa 89bd     +LDD R27 , Y + 20 + 1
0000ab 898e     +LDD R24 , Y + 20 + 2
0000ac 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
0000ad 940e 05ec 	CALL SUBOPT_0x0
                +
0000af 89ac     +LDD R26 , Y + 20
0000b0 89bd     +LDD R27 , Y + 20 + 1
0000b1 898e     +LDD R24 , Y + 20 + 2
0000b2 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
0000b3 940e 0799 	CALL __ADDF12
0000b5 940e 05f3 	CALL SUBOPT_0x1
                 ; 0000 0027       sprintf(lcd,"V=%2.2f",voltage);
0000b7 01fe      	MOVW R30,R28
0000b8 93fa      	ST   -Y,R31
0000b9 93ea      	ST   -Y,R30
                +
0000ba e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000bb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000bc 93fa      	ST   -Y,R31
0000bd 93ea      	ST   -Y,R30
                +
0000be 89ec     +LDD R30 , Y + 20
0000bf 89fd     +LDD R31 , Y + 20 + 1
0000c0 896e     +LDD R22 , Y + 20 + 2
0000c1 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
0000c2 940e 0920 	CALL __PUTPARD1
0000c4 e084      	LDI  R24,4
0000c5 940e 04a9 	CALL _sprintf
0000c7 9628      	ADIW R28,8
                 ; 0000 0028       lcd_gotoxy(0,0);
0000c8 e0e0      	LDI  R30,LOW(0)
0000c9 93ea      	ST   -Y,R30
0000ca e0a0      	LDI  R26,LOW(0)
0000cb d02f      	RCALL _lcd_gotoxy
                 ; 0000 0029       lcd_puts(lcd);
0000cc 01de      	MOVW R26,R28
0000cd d05b      	RCALL _lcd_puts
                 ; 0000 002A       lcd_gotoxy(13,0);
0000ce e0ed      	LDI  R30,LOW(13)
0000cf 93ea      	ST   -Y,R30
0000d0 e0a0      	LDI  R26,LOW(0)
0000d1 d029      	RCALL _lcd_gotoxy
                 ; 0000 002B       lcd_putsf("V");
                +
0000d2 e5ac     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
0000d3 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
0000d4 d063      	RCALL _lcd_putsf
                 ; 0000 002C       delay_ms(500);
0000d5 efa4      	LDI  R26,LOW(500)
0000d6 e0b1      	LDI  R27,HIGH(500)
0000d7 940e 06e9 	CALL _delay_ms
                 ; 0000 002D       }
0000d9 cfaf      	RJMP _0x6
                 ; 0000 002E }
                 _0x9:
0000da cfff      	RJMP _0x9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000db 93aa      	ST   -Y,R26
0000dc b3e5      	IN   R30,0x15
0000dd 70ef      	ANDI R30,LOW(0xF)
0000de 2fae      	MOV  R26,R30
0000df 81e8      	LD   R30,Y
0000e0 7fe0      	ANDI R30,LOW(0xF0)
0000e1 2bea      	OR   R30,R26
0000e2 bbe5      	OUT  0x15,R30
                +
0000e3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e4 958a     +DEC R24
0000e5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e6 9aaa      	SBI  0x15,2
                +
0000e7 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e8 958a     +DEC R24
0000e9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ea 98aa      	CBI  0x15,2
                +
0000eb e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ec 958a     +DEC R24
0000ed f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ee c088      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000ef 93aa      	ST   -Y,R26
0000f0 81a8      	LD   R26,Y
0000f1 dfe9      	RCALL __lcd_write_nibble_G100
0000f2 81e8          ld    r30,y
0000f3 95e2          swap  r30
0000f4 83e8          st    y,r30
0000f5 81a8      	LD   R26,Y
0000f6 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000f7 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000f8 958a     +DEC R24
0000f9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000fa c07c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000fb 93aa      	ST   -Y,R26
0000fc 81e8      	LD   R30,Y
0000fd e0f0      	LDI  R31,0
0000fe 5ae0      	SUBI R30,LOW(-__base_y_G100)
0000ff 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000100 81e0      	LD   R30,Z
000101 81a9      	LDD  R26,Y+1
000102 0fae      	ADD  R26,R30
000103 dfeb      	RCALL __lcd_write_data
000104 8059      	LDD  R5,Y+1
000105 8048      	LDD  R4,Y+0
000106 9622      	ADIW R28,2
000107 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000108 e0a2      	LDI  R26,LOW(2)
000109 940e 05f8 	CALL SUBOPT_0x2
00010b e0ac      	LDI  R26,LOW(12)
00010c dfe2      	RCALL __lcd_write_data
00010d e0a1      	LDI  R26,LOW(1)
00010e 940e 05f8 	CALL SUBOPT_0x2
000110 e0e0      	LDI  R30,LOW(0)
000111 2e4e      	MOV  R4,R30
000112 2e5e      	MOV  R5,R30
000113 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000114 93aa      	ST   -Y,R26
000115 81a8      	LD   R26,Y
000116 30aa      	CPI  R26,LOW(0xA)
000117 f011      	BREQ _0x2000005
000118 1457      	CP   R5,R7
000119 f048      	BRLO _0x2000004
                 _0x2000005:
00011a e0e0      	LDI  R30,LOW(0)
00011b 93ea      	ST   -Y,R30
00011c 9443      	INC  R4
00011d 2da4      	MOV  R26,R4
00011e dfdc      	RCALL _lcd_gotoxy
00011f 81a8      	LD   R26,Y
000120 30aa      	CPI  R26,LOW(0xA)
000121 f409      	BRNE _0x2000007
000122 c054      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
000123 9453      	INC  R5
000124 9aa8      	SBI  0x15,0
000125 81a8      	LD   R26,Y
000126 dfc8      	RCALL __lcd_write_data
000127 98a8      	CBI  0x15,0
000128 c04e      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000129 93ba      	ST   -Y,R27
00012a 93aa      	ST   -Y,R26
00012b 931a      	ST   -Y,R17
                 _0x2000008:
00012c 81a9      	LDD  R26,Y+1
00012d 81ba      	LDD  R27,Y+1+1
00012e 91ed      	LD   R30,X+
00012f 83a9      	STD  Y+1,R26
000130 83ba      	STD  Y+1+1,R27
000131 2f1e      	MOV  R17,R30
000132 30e0      	CPI  R30,0
000133 f019      	BREQ _0x200000A
000134 2fa1      	MOV  R26,R17
000135 dfde      	RCALL _lcd_putchar
000136 cff5      	RJMP _0x2000008
                 _0x200000A:
000137 c010      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000138 93ba      	ST   -Y,R27
000139 93aa      	ST   -Y,R26
00013a 931a      	ST   -Y,R17
                 _0x200000B:
00013b 81e9      	LDD  R30,Y+1
00013c 81fa      	LDD  R31,Y+1+1
00013d 9631      	ADIW R30,1
00013e 83e9      	STD  Y+1,R30
00013f 83fa      	STD  Y+1+1,R31
000140 9731      	SBIW R30,1
000141 91e4      	LPM  R30,Z
000142 2f1e      	MOV  R17,R30
000143 30e0      	CPI  R30,0
000144 f019      	BREQ _0x200000D
000145 2fa1      	MOV  R26,R17
000146 dfcd      	RCALL _lcd_putchar
000147 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0007:
000148 8118      	LDD  R17,Y+0
000149 9623      	ADIW R28,3
00014a 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00014b 93aa      	ST   -Y,R26
00014c b3e4      	IN   R30,0x14
00014d 6fe0      	ORI  R30,LOW(0xF0)
00014e bbe4      	OUT  0x14,R30
00014f 9aa2      	SBI  0x14,2
000150 9aa0      	SBI  0x14,0
000151 9aa1      	SBI  0x14,1
000152 98aa      	CBI  0x15,2
000153 98a8      	CBI  0x15,0
000154 98a9      	CBI  0x15,1
000155 8078      	LDD  R7,Y+0
000156 81e8      	LD   R30,Y
000157 58e0      	SUBI R30,-LOW(128)
                +
000158 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00015a 81e8      	LD   R30,Y
00015b 54e0      	SUBI R30,-LOW(192)
                +
00015c 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00015e e1a4      	LDI  R26,LOW(20)
00015f e0b0      	LDI  R27,0
000160 940e 06e9 	CALL _delay_ms
000162 940e 05fe 	CALL SUBOPT_0x3
000164 940e 05fe 	CALL SUBOPT_0x3
000166 940e 05fe 	CALL SUBOPT_0x3
000168 e2a0      	LDI  R26,LOW(32)
000169 df71      	RCALL __lcd_write_nibble_G100
                +
00016a ec88     +LDI R24 , LOW ( 200 )
00016b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00016c 9701     +SBIW R24 , 1
00016d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00016e e2a8      	LDI  R26,LOW(40)
00016f df7f      	RCALL __lcd_write_data
000170 e0a4      	LDI  R26,LOW(4)
000171 df7d      	RCALL __lcd_write_data
000172 e8a5      	LDI  R26,LOW(133)
000173 df7b      	RCALL __lcd_write_data
000174 e0a6      	LDI  R26,LOW(6)
000175 df79      	RCALL __lcd_write_data
000176 df91      	RCALL _lcd_clear
                 _0x20C0006:
000177 9621      	ADIW R28,1
000178 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000179 93ba      	ST   -Y,R27
00017a 93aa      	ST   -Y,R26
00017b 931a      	ST   -Y,R17
00017c 930a      	ST   -Y,R16
00017d 81aa      	LDD  R26,Y+2
00017e 81bb      	LDD  R27,Y+2+1
00017f 9612      	ADIW R26,2
000180 940e 0907 	CALL __GETW1P
000182 9730      	SBIW R30,0
000183 f129      	BREQ _0x2020010
000184 81aa      	LDD  R26,Y+2
000185 81bb      	LDD  R27,Y+2+1
000186 9614      	ADIW R26,4
000187 940e 0907 	CALL __GETW1P
000189 018f      	MOVW R16,R30
00018a 9730      	SBIW R30,0
00018b f061      	BREQ _0x2020012
                +
00018c 3002     +CPI R16 , LOW ( 2 )
00018d e0e0     +LDI R30 , HIGH ( 2 )
00018e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00018f f080      	BRLO _0x2020013
000190 01f8      	MOVW R30,R16
000191 9731      	SBIW R30,1
000192 018f      	MOVW R16,R30
                +
000193 81aa     +LDD R26 , Y + 2
000194 81bb     +LDD R27 , Y + 2 + 1
000195 9614     +ADIW R26 , 4
000196 93ed     +ST X + , R30
000197 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000198 81aa      	LDD  R26,Y+2
000199 81bb      	LDD  R27,Y+2+1
00019a 9612      	ADIW R26,2
00019b 940e 0606 	CALL SUBOPT_0x4
00019d 9731      	SBIW R30,1
00019e 81ac      	LDD  R26,Y+4
00019f 83a0      	STD  Z+0,R26
                 _0x2020013:
0001a0 81aa      	LDD  R26,Y+2
0001a1 81bb      	LDD  R27,Y+2+1
0001a2 940e 0907 	CALL __GETW1P
0001a4 23ff      	TST  R31
0001a5 f012      	BRMI _0x2020014
0001a6 940e 0606 	CALL SUBOPT_0x4
                 _0x2020014:
0001a8 c006      	RJMP _0x2020015
                 _0x2020010:
0001a9 81aa      	LDD  R26,Y+2
0001aa 81bb      	LDD  R27,Y+2+1
0001ab efef      	LDI  R30,LOW(65535)
0001ac efff      	LDI  R31,HIGH(65535)
0001ad 93ed      	ST   X+,R30
0001ae 93fc      	ST   X,R31
                 _0x2020015:
0001af 8119      	LDD  R17,Y+1
0001b0 8108      	LDD  R16,Y+0
0001b1 9625      	ADIW R28,5
0001b2 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0001b3 940e 060c 	CALL SUBOPT_0x5
0001b5 e8e0      	LDI  R30,LOW(128)
0001b6 83ea      	STD  Y+2,R30
0001b7 e3ef      	LDI  R30,LOW(63)
0001b8 83eb      	STD  Y+3,R30
0001b9 940e 093d 	CALL __SAVELOCR4
0001bb 85ee      	LDD  R30,Y+14
0001bc 85ff      	LDD  R31,Y+14+1
0001bd 3fef      	CPI  R30,LOW(0xFFFF)
0001be efaf      	LDI  R26,HIGH(0xFFFF)
0001bf 07fa      	CPC  R31,R26
0001c0 f449      	BRNE _0x2020019
0001c1 85e8      	LDD  R30,Y+8
0001c2 85f9      	LDD  R31,Y+8+1
0001c3 93fa      	ST   -Y,R31
0001c4 93ea      	ST   -Y,R30
                +
0001c5 e6a0     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
0001c6 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
0001c7 940e 04dd 	CALL _strcpyf
0001c9 c0c1      	RJMP _0x20C0005
                 _0x2020019:
0001ca 3fef      	CPI  R30,LOW(0x7FFF)
0001cb e7af      	LDI  R26,HIGH(0x7FFF)
0001cc 07fa      	CPC  R31,R26
0001cd f449      	BRNE _0x2020018
0001ce 85e8      	LDD  R30,Y+8
0001cf 85f9      	LDD  R31,Y+8+1
0001d0 93fa      	ST   -Y,R31
0001d1 93ea      	ST   -Y,R30
                +
0001d2 e6a1     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
0001d3 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
0001d4 940e 04dd 	CALL _strcpyf
0001d6 c0b4      	RJMP _0x20C0005
                 _0x2020018:
0001d7 85ab      	LDD  R26,Y+11
0001d8 30a7      	CPI  R26,LOW(0x7)
0001d9 f010      	BRLO _0x202001B
0001da e0e6      	LDI  R30,LOW(6)
0001db 87eb      	STD  Y+11,R30
                 _0x202001B:
0001dc 851b      	LDD  R17,Y+11
                 _0x202001C:
0001dd 2fe1      	MOV  R30,R17
0001de 5011      	SUBI R17,1
0001df 30e0      	CPI  R30,0
0001e0 f029      	BREQ _0x202001E
0001e1 940e 0613 	CALL SUBOPT_0x6
0001e3 940e 0618 	CALL SUBOPT_0x7
0001e5 cff7      	RJMP _0x202001C
                 _0x202001E:
                +
0001e6 85ec     +LDD R30 , Y + 12
0001e7 85fd     +LDD R31 , Y + 12 + 1
0001e8 856e     +LDD R22 , Y + 12 + 2
0001e9 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001ea 940e 0937 	CALL __CPD10
0001ec f431      	BRNE _0x202001F
0001ed e030      	LDI  R19,LOW(0)
0001ee 940e 0613 	CALL SUBOPT_0x6
0001f0 940e 0618 	CALL SUBOPT_0x7
0001f2 c031      	RJMP _0x2020020
                 _0x202001F:
0001f3 853b      	LDD  R19,Y+11
0001f4 940e 061d 	CALL SUBOPT_0x8
0001f6 f009      	BREQ PC+2
0001f7 f408      	BRCC PC+2
0001f8 c00d      	RJMP _0x2020021
0001f9 940e 0613 	CALL SUBOPT_0x6
0001fb 940e 0618 	CALL SUBOPT_0x7
                 _0x2020022:
0001fd 940e 061d 	CALL SUBOPT_0x8
0001ff f028      	BRLO _0x2020024
000200 940e 0628 	CALL SUBOPT_0x9
000202 940e 062d 	CALL SUBOPT_0xA
000204 cff8      	RJMP _0x2020022
                 _0x2020024:
000205 c00f      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000206 940e 061d 	CALL SUBOPT_0x8
000208 f440      	BRSH _0x2020028
000209 940e 0628 	CALL SUBOPT_0x9
00020b 940e 05ec 	CALL SUBOPT_0x0
00020d 940e 0639 	CALL SUBOPT_0xB
00020f 5031      	SUBI R19,LOW(1)
000210 cff5      	RJMP _0x2020026
                 _0x2020028:
000211 940e 0613 	CALL SUBOPT_0x6
000213 940e 0618 	CALL SUBOPT_0x7
                 _0x2020025:
                +
000215 85ec     +LDD R30 , Y + 12
000216 85fd     +LDD R31 , Y + 12 + 1
000217 856e     +LDD R22 , Y + 12 + 2
000218 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000219 940e 063e 	CALL SUBOPT_0xC
00021b 940e 0639 	CALL SUBOPT_0xB
00021d 940e 061d 	CALL SUBOPT_0x8
00021f f020      	BRLO _0x2020029
000220 940e 0628 	CALL SUBOPT_0x9
000222 940e 062d 	CALL SUBOPT_0xA
                 _0x2020029:
                 _0x2020020:
000224 e010      	LDI  R17,LOW(0)
                 _0x202002A:
000225 85eb      	LDD  R30,Y+11
000226 17e1      	CP   R30,R17
000227 f1b8      	BRLO _0x202002C
                +
000228 81ac     +LDD R26 , Y + 4
000229 81bd     +LDD R27 , Y + 4 + 1
00022a 818e     +LDD R24 , Y + 4 + 2
00022b 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00022c 940e 0645 	CALL SUBOPT_0xD
00022e 940e 063e 	CALL SUBOPT_0xC
000230 01df      	MOVW R26,R30
000231 01cb      	MOVW R24,R22
000232 940e 0534 	CALL _floor
000234 940e 0618 	CALL SUBOPT_0x7
                +
000236 81ec     +LDD R30 , Y + 4
000237 81fd     +LDD R31 , Y + 4 + 1
000238 816e     +LDD R22 , Y + 4 + 2
000239 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00023a 940e 0628 	CALL SUBOPT_0x9
00023c 940e 0837 	CALL __DIVF21
00023e 940e 0726 	CALL __CFD1U
000240 2f0e      	MOV  R16,R30
000241 940e 064c 	CALL SUBOPT_0xE
000243 940e 0653 	CALL SUBOPT_0xF
000245 27ff      	CLR  R31
000246 2766      	CLR  R22
000247 2777      	CLR  R23
000248 940e 075f 	CALL __CDF1
                +
00024a 81ac     +LDD R26 , Y + 4
00024b 81bd     +LDD R27 , Y + 4 + 1
00024c 818e     +LDD R24 , Y + 4 + 2
00024d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00024e 940e 07e9 	CALL __MULF12
000250 940e 0628 	CALL SUBOPT_0x9
000252 940e 0658 	CALL SUBOPT_0x10
000254 940e 0639 	CALL SUBOPT_0xB
000256 2fe1      	MOV  R30,R17
000257 5f1f      	SUBI R17,-1
000258 30e0      	CPI  R30,0
000259 f659      	BRNE _0x202002A
00025a 940e 064c 	CALL SUBOPT_0xE
00025c e2ee      	LDI  R30,LOW(46)
00025d 93ec      	ST   X,R30
00025e cfc6      	RJMP _0x202002A
                 _0x202002C:
00025f 940e 065d 	CALL SUBOPT_0x11
000261 9731      	SBIW R30,1
000262 85aa      	LDD  R26,Y+10
000263 83a0      	STD  Z+0,R26
000264 3030      	CPI  R19,0
000265 f42c      	BRGE _0x202002E
000266 9531      	NEG  R19
000267 85a8      	LDD  R26,Y+8
000268 85b9      	LDD  R27,Y+8+1
000269 e2ed      	LDI  R30,LOW(45)
00026a c003      	RJMP _0x2020113
                 _0x202002E:
00026b 85a8      	LDD  R26,Y+8
00026c 85b9      	LDD  R27,Y+8+1
00026d e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
00026e 93ec      	ST   X,R30
00026f 940e 065d 	CALL SUBOPT_0x11
000271 940e 065d 	CALL SUBOPT_0x11
000273 9731      	SBIW R30,1
000274 01bf      	MOVW R22,R30
000275 2fa3      	MOV  R26,R19
000276 e0ea      	LDI  R30,LOW(10)
000277 940e 08c1 	CALL __DIVB21
000279 5de0      	SUBI R30,-LOW(48)
00027a 01db      	MOVW R26,R22
00027b 93ec      	ST   X,R30
00027c 940e 065d 	CALL SUBOPT_0x11
00027e 9731      	SBIW R30,1
00027f 01bf      	MOVW R22,R30
000280 2fa3      	MOV  R26,R19
000281 e0ea      	LDI  R30,LOW(10)
000282 940e 08eb 	CALL __MODB21
000284 5de0      	SUBI R30,-LOW(48)
000285 01db      	MOVW R26,R22
000286 93ec      	ST   X,R30
000287 85a8      	LDD  R26,Y+8
000288 85b9      	LDD  R27,Y+8+1
000289 e0e0      	LDI  R30,LOW(0)
00028a 93ec      	ST   X,R30
                 _0x20C0005:
00028b 940e 0944 	CALL __LOADLOCR4
00028d 9660      	ADIW R28,16
00028e 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00028f 93ba      	ST   -Y,R27
000290 93aa      	ST   -Y,R26
000291 97ef      	SBIW R28,63
000292 9761      	SBIW R28,17
000293 940e 093b 	CALL __SAVELOCR6
000295 e010      	LDI  R17,0
                +
000296 01fe     +MOVW R30 , R28
000297 5ae8     +SUBI R30 , LOW ( - 88 )
000298 4fff     +SBCI R31 , HIGH ( - 88 )
000299 9001     +LD R0 , Z +
00029a 81f0     +LD R31 , Z
00029b 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00029c 87e8      	STD  Y+8,R30
00029d 87f9      	STD  Y+8+1,R31
                +
00029e 01fe     +MOVW R30 , R28
00029f 5aea     +SUBI R30 , LOW ( - 86 )
0002a0 4fff     +SBCI R31 , HIGH ( - 86 )
0002a1 9001     +LD R0 , Z +
0002a2 81f0     +LD R31 , Z
0002a3 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002a4 83ee      	STD  Y+6,R30
0002a5 83ff      	STD  Y+6+1,R31
0002a6 81ae      	LDD  R26,Y+6
0002a7 81bf      	LDD  R27,Y+6+1
0002a8 e0e0      	LDI  R30,LOW(0)
0002a9 e0f0      	LDI  R31,HIGH(0)
0002aa 93ed      	ST   X+,R30
0002ab 93fc      	ST   X,R31
                 _0x2020030:
0002ac 01de      	MOVW R26,R28
0002ad 5aa4      	SUBI R26,LOW(-(92))
0002ae 4fbf      	SBCI R27,HIGH(-(92))
0002af 940e 0606 	CALL SUBOPT_0x4
0002b1 9731      	SBIW R30,1
0002b2 91e4      	LPM  R30,Z
0002b3 2f2e      	MOV  R18,R30
0002b4 30e0      	CPI  R30,0
0002b5 f409      	BRNE PC+2
0002b6 c1e9      	RJMP _0x2020032
0002b7 2fe1      	MOV  R30,R17
0002b8 30e0      	CPI  R30,0
0002b9 f439      	BRNE _0x2020036
0002ba 3225      	CPI  R18,37
0002bb f411      	BRNE _0x2020037
0002bc e011      	LDI  R17,LOW(1)
0002bd c002      	RJMP _0x2020038
                 _0x2020037:
0002be 940e 0663 	CALL SUBOPT_0x12
                 _0x2020038:
0002c0 c1de      	RJMP _0x2020035
                 _0x2020036:
0002c1 30e1      	CPI  R30,LOW(0x1)
0002c2 f4c1      	BRNE _0x2020039
0002c3 3225      	CPI  R18,37
0002c4 f419      	BRNE _0x202003A
0002c5 940e 0663 	CALL SUBOPT_0x12
0002c7 c1d6      	RJMP _0x2020114
                 _0x202003A:
0002c8 e012      	LDI  R17,LOW(2)
0002c9 e0e0      	LDI  R30,LOW(0)
0002ca 8bed      	STD  Y+21,R30
0002cb e000      	LDI  R16,LOW(0)
0002cc 322d      	CPI  R18,45
0002cd f411      	BRNE _0x202003B
0002ce e001      	LDI  R16,LOW(1)
0002cf c1cf      	RJMP _0x2020035
                 _0x202003B:
0002d0 322b      	CPI  R18,43
0002d1 f419      	BRNE _0x202003C
0002d2 e2eb      	LDI  R30,LOW(43)
0002d3 8bed      	STD  Y+21,R30
0002d4 c1ca      	RJMP _0x2020035
                 _0x202003C:
0002d5 3220      	CPI  R18,32
0002d6 f419      	BRNE _0x202003D
0002d7 e2e0      	LDI  R30,LOW(32)
0002d8 8bed      	STD  Y+21,R30
0002d9 c1c5      	RJMP _0x2020035
                 _0x202003D:
0002da c002      	RJMP _0x202003E
                 _0x2020039:
0002db 30e2      	CPI  R30,LOW(0x2)
0002dc f439      	BRNE _0x202003F
                 _0x202003E:
0002dd e050      	LDI  R21,LOW(0)
0002de e013      	LDI  R17,LOW(3)
0002df 3320      	CPI  R18,48
0002e0 f411      	BRNE _0x2020040
0002e1 6800      	ORI  R16,LOW(128)
0002e2 c1bc      	RJMP _0x2020035
                 _0x2020040:
0002e3 c002      	RJMP _0x2020041
                 _0x202003F:
0002e4 30e3      	CPI  R30,LOW(0x3)
0002e5 f491      	BRNE _0x2020042
                 _0x2020041:
0002e6 3320      	CPI  R18,48
0002e7 f010      	BRLO _0x2020044
0002e8 332a      	CPI  R18,58
0002e9 f008      	BRLO _0x2020045
                 _0x2020044:
0002ea c007      	RJMP _0x2020043
                 _0x2020045:
0002eb e0aa      	LDI  R26,LOW(10)
0002ec 9f5a      	MUL  R21,R26
0002ed 2d50      	MOV  R21,R0
0002ee 2fe2      	MOV  R30,R18
0002ef 53e0      	SUBI R30,LOW(48)
0002f0 0f5e      	ADD  R21,R30
0002f1 c1ad      	RJMP _0x2020035
                 _0x2020043:
0002f2 e040      	LDI  R20,LOW(0)
0002f3 322e      	CPI  R18,46
0002f4 f411      	BRNE _0x2020046
0002f5 e014      	LDI  R17,LOW(4)
0002f6 c1a8      	RJMP _0x2020035
                 _0x2020046:
0002f7 c00f      	RJMP _0x2020047
                 _0x2020042:
0002f8 30e4      	CPI  R30,LOW(0x4)
0002f9 f499      	BRNE _0x2020049
0002fa 3320      	CPI  R18,48
0002fb f010      	BRLO _0x202004B
0002fc 332a      	CPI  R18,58
0002fd f008      	BRLO _0x202004C
                 _0x202004B:
0002fe c008      	RJMP _0x202004A
                 _0x202004C:
0002ff 6200      	ORI  R16,LOW(32)
000300 e0aa      	LDI  R26,LOW(10)
000301 9f4a      	MUL  R20,R26
000302 2d40      	MOV  R20,R0
000303 2fe2      	MOV  R30,R18
000304 53e0      	SUBI R30,LOW(48)
000305 0f4e      	ADD  R20,R30
000306 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000307 362c      	CPI  R18,108
000308 f419      	BRNE _0x202004D
000309 6002      	ORI  R16,LOW(2)
00030a e015      	LDI  R17,LOW(5)
00030b c193      	RJMP _0x2020035
                 _0x202004D:
00030c c003      	RJMP _0x202004E
                 _0x2020049:
00030d 30e5      	CPI  R30,LOW(0x5)
00030e f009      	BREQ PC+2
00030f c18f      	RJMP _0x2020035
                 _0x202004E:
000310 2fe2      	MOV  R30,R18
000311 36e3      	CPI  R30,LOW(0x63)
000312 f459      	BRNE _0x2020053
000313 940e 066a 	CALL SUBOPT_0x13
000315 940e 0671 	CALL SUBOPT_0x14
000317 940e 066a 	CALL SUBOPT_0x13
000319 81a4      	LDD  R26,Z+4
00031a 93aa      	ST   -Y,R26
00031b 940e 0678 	CALL SUBOPT_0x15
00031d c180      	RJMP _0x2020054
                 _0x2020053:
00031e 34e5      	CPI  R30,LOW(0x45)
00031f f011      	BREQ _0x2020057
000320 36e5      	CPI  R30,LOW(0x65)
000321 f409      	BRNE _0x2020058
                 _0x2020057:
000322 c003      	RJMP _0x2020059
                 _0x2020058:
000323 36e6      	CPI  R30,LOW(0x66)
000324 f009      	BREQ PC+2
000325 c048      	RJMP _0x202005A
                 _0x2020059:
000326 01fe      	MOVW R30,R28
000327 9676      	ADIW R30,22
000328 87ee      	STD  Y+14,R30
000329 87ff      	STD  Y+14+1,R31
00032a 940e 067e 	CALL SUBOPT_0x16
00032c 940e 090b 	CALL __GETD1P
00032e 940e 0685 	CALL SUBOPT_0x17
000330 940e 068a 	CALL SUBOPT_0x18
000332 85ad      	LDD  R26,Y+13
000333 23aa      	TST  R26
000334 f032      	BRMI _0x202005B
000335 89ad      	LDD  R26,Y+21
000336 32ab      	CPI  R26,LOW(0x2B)
000337 f059      	BREQ _0x202005D
000338 32a0      	CPI  R26,LOW(0x20)
000339 f081      	BREQ _0x202005F
00033a c017      	RJMP _0x2020060
                 _0x202005B:
00033b 940e 068c 	CALL SUBOPT_0x19
00033d 940e 06f3 	CALL __ANEGF1
00033f 940e 0685 	CALL SUBOPT_0x17
000341 e2ed      	LDI  R30,LOW(45)
000342 8bed      	STD  Y+21,R30
                 _0x202005D:
000343 ff07      	SBRS R16,7
000344 c005      	RJMP _0x2020061
000345 89ed      	LDD  R30,Y+21
000346 93ea      	ST   -Y,R30
000347 940e 0678 	CALL SUBOPT_0x15
000349 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
00034a 85ee      	LDD  R30,Y+14
00034b 85ff      	LDD  R31,Y+14+1
00034c 9631      	ADIW R30,1
00034d 87ee      	STD  Y+14,R30
00034e 87ff      	STD  Y+14+1,R31
00034f 9731      	SBIW R30,1
000350 89ad      	LDD  R26,Y+21
000351 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
000352 ff05      	SBRS R16,5
000353 e046      	LDI  R20,LOW(6)
000354 3626      	CPI  R18,102
000355 f451      	BRNE _0x2020064
000356 940e 068c 	CALL SUBOPT_0x19
000358 940e 0920 	CALL __PUTPARD1
00035a 934a      	ST   -Y,R20
00035b 89ab      	LDD  R26,Y+19
00035c 89bc      	LDD  R27,Y+19+1
00035d 940e 054b 	CALL _ftoa
00035f c009      	RJMP _0x2020065
                 _0x2020064:
000360 940e 068c 	CALL SUBOPT_0x19
000362 940e 0920 	CALL __PUTPARD1
000364 934a      	ST   -Y,R20
000365 932a      	ST   -Y,R18
000366 89ac      	LDD  R26,Y+20
000367 89bd      	LDD  R27,Y+20+1
000368 de4a      	RCALL __ftoe_G101
                 _0x2020065:
000369 01fe      	MOVW R30,R28
00036a 9676      	ADIW R30,22
00036b 940e 0691 	CALL SUBOPT_0x1A
00036d c01e      	RJMP _0x2020066
                 _0x202005A:
00036e 37e3      	CPI  R30,LOW(0x73)
00036f f439      	BRNE _0x2020068
000370 940e 068a 	CALL SUBOPT_0x18
000372 940e 0699 	CALL SUBOPT_0x1B
000374 940e 0691 	CALL SUBOPT_0x1A
000376 c00e      	RJMP _0x2020069
                 _0x2020068:
000377 37e0      	CPI  R30,LOW(0x70)
000378 f4c1      	BRNE _0x202006B
000379 940e 068a 	CALL SUBOPT_0x18
00037b 940e 0699 	CALL SUBOPT_0x1B
00037d 87ee      	STD  Y+14,R30
00037e 87ff      	STD  Y+14+1,R31
00037f 85ae      	LDD  R26,Y+14
000380 85bf      	LDD  R27,Y+14+1
000381 940e 04f6 	CALL _strlenf
000383 2f1e      	MOV  R17,R30
000384 6008      	ORI  R16,LOW(8)
                 _0x2020069:
000385 770f      	ANDI R16,LOW(127)
000386 3040      	CPI  R20,0
000387 f011      	BREQ _0x202006D
000388 1741      	CP   R20,R17
000389 f008      	BRLO _0x202006E
                 _0x202006D:
00038a c001      	RJMP _0x202006C
                 _0x202006E:
00038b 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
00038c e040      	LDI  R20,LOW(0)
00038d e0e0      	LDI  R30,LOW(0)
00038e 8bec      	STD  Y+20,R30
00038f e030      	LDI  R19,LOW(0)
000390 c06d      	RJMP _0x202006F
                 _0x202006B:
000391 36e4      	CPI  R30,LOW(0x64)
000392 f011      	BREQ _0x2020072
000393 36e9      	CPI  R30,LOW(0x69)
000394 f411      	BRNE _0x2020073
                 _0x2020072:
000395 6004      	ORI  R16,LOW(4)
000396 c002      	RJMP _0x2020074
                 _0x2020073:
000397 37e5      	CPI  R30,LOW(0x75)
000398 f4a1      	BRNE _0x2020075
                 _0x2020074:
000399 e0ea      	LDI  R30,LOW(10)
00039a 8bec      	STD  Y+20,R30
00039b ff01      	SBRS R16,1
00039c c008      	RJMP _0x2020076
                +
00039d e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00039e ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00039f e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003a0 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003a1 940e 05f3 	CALL SUBOPT_0x1
0003a3 e01a      	LDI  R17,LOW(10)
0003a4 c022      	RJMP _0x2020077
                 _0x2020076:
                +
0003a5 e1e0     +LDI R30 , LOW ( 0x2710 )
0003a6 e2f7     +LDI R31 , HIGH ( 0x2710 )
0003a7 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003a8 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003a9 940e 05f3 	CALL SUBOPT_0x1
0003ab e015      	LDI  R17,LOW(5)
0003ac c01a      	RJMP _0x2020077
                 _0x2020075:
0003ad 35e8      	CPI  R30,LOW(0x58)
0003ae f411      	BRNE _0x2020079
0003af 6008      	ORI  R16,LOW(8)
0003b0 c003      	RJMP _0x202007A
                 _0x2020079:
0003b1 37e8      	CPI  R30,LOW(0x78)
0003b2 f009      	BREQ PC+2
0003b3 c0ea      	RJMP _0x20200B8
                 _0x202007A:
0003b4 e1e0      	LDI  R30,LOW(16)
0003b5 8bec      	STD  Y+20,R30
0003b6 ff01      	SBRS R16,1
0003b7 c008      	RJMP _0x202007C
                +
0003b8 e0e0     +LDI R30 , LOW ( 0x10000000 )
0003b9 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0003ba e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003bb e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003bc 940e 05f3 	CALL SUBOPT_0x1
0003be e018      	LDI  R17,LOW(8)
0003bf c007      	RJMP _0x2020077
                 _0x202007C:
                +
0003c0 e0e0     +LDI R30 , LOW ( 0x1000 )
0003c1 e1f0     +LDI R31 , HIGH ( 0x1000 )
0003c2 e060     +LDI R22 , BYTE3 ( 0x1000 )
0003c3 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0003c4 940e 05f3 	CALL SUBOPT_0x1
0003c6 e014      	LDI  R17,LOW(4)
                 _0x2020077:
0003c7 3040      	CPI  R20,0
0003c8 f011      	BREQ _0x202007D
0003c9 770f      	ANDI R16,LOW(127)
0003ca c001      	RJMP _0x202007E
                 _0x202007D:
0003cb e041      	LDI  R20,LOW(1)
                 _0x202007E:
0003cc ff01      	SBRS R16,1
0003cd c008      	RJMP _0x202007F
0003ce 940e 068a 	CALL SUBOPT_0x18
0003d0 940e 067e 	CALL SUBOPT_0x16
0003d2 9614      	ADIW R26,4
0003d3 940e 090b 	CALL __GETD1P
0003d5 c00f      	RJMP _0x2020115
                 _0x202007F:
0003d6 ff02      	SBRS R16,2
0003d7 c007      	RJMP _0x2020081
0003d8 940e 068a 	CALL SUBOPT_0x18
0003da 940e 0699 	CALL SUBOPT_0x1B
0003dc 940e 08ae 	CALL __CWD1
0003de c006      	RJMP _0x2020115
                 _0x2020081:
0003df 940e 068a 	CALL SUBOPT_0x18
0003e1 940e 0699 	CALL SUBOPT_0x1B
0003e3 2766      	CLR  R22
0003e4 2777      	CLR  R23
                 _0x2020115:
                +
0003e5 87ea     +STD Y + 10 , R30
0003e6 87fb     +STD Y + 10 + 1 , R31
0003e7 876c     +STD Y + 10 + 2 , R22
0003e8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0003e9 ff02      	SBRS R16,2
0003ea c012      	RJMP _0x2020083
0003eb 85ad      	LDD  R26,Y+13
0003ec 23aa      	TST  R26
0003ed f442      	BRPL _0x2020084
0003ee 940e 068c 	CALL SUBOPT_0x19
0003f0 940e 08a0 	CALL __ANEGD1
0003f2 940e 0685 	CALL SUBOPT_0x17
0003f4 e2ed      	LDI  R30,LOW(45)
0003f5 8bed      	STD  Y+21,R30
                 _0x2020084:
0003f6 89ed      	LDD  R30,Y+21
0003f7 30e0      	CPI  R30,0
0003f8 f019      	BREQ _0x2020085
0003f9 5f1f      	SUBI R17,-LOW(1)
0003fa 5f4f      	SUBI R20,-LOW(1)
0003fb c001      	RJMP _0x2020086
                 _0x2020085:
0003fc 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
0003fd 2f34      	MOV  R19,R20
                 _0x202006F:
0003fe fd00      	SBRC R16,0
0003ff c014      	RJMP _0x2020087
                 _0x2020088:
000400 1715      	CP   R17,R21
000401 f410      	BRSH _0x202008B
000402 1735      	CP   R19,R21
000403 f008      	BRLO _0x202008C
                 _0x202008B:
000404 c00f      	RJMP _0x202008A
                 _0x202008C:
000405 ff07      	SBRS R16,7
000406 c008      	RJMP _0x202008D
000407 ff02      	SBRS R16,2
000408 c004      	RJMP _0x202008E
000409 7f0b      	ANDI R16,LOW(251)
00040a 892d      	LDD  R18,Y+21
00040b 5011      	SUBI R17,LOW(1)
00040c c001      	RJMP _0x202008F
                 _0x202008E:
00040d e320      	LDI  R18,LOW(48)
                 _0x202008F:
00040e c001      	RJMP _0x2020090
                 _0x202008D:
00040f e220      	LDI  R18,LOW(32)
                 _0x2020090:
000410 940e 0663 	CALL SUBOPT_0x12
000412 5051      	SUBI R21,LOW(1)
000413 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000414 1714      	CP   R17,R20
000415 f490      	BRSH _0x2020093
000416 6100      	ORI  R16,LOW(16)
000417 ff02      	SBRS R16,2
000418 c006      	RJMP _0x2020094
000419 940e 069e 	CALL SUBOPT_0x1C
00041b f009      	BREQ _0x2020095
00041c 5051      	SUBI R21,LOW(1)
                 _0x2020095:
00041d 5011      	SUBI R17,LOW(1)
00041e 5041      	SUBI R20,LOW(1)
                 _0x2020094:
00041f e3e0      	LDI  R30,LOW(48)
000420 93ea      	ST   -Y,R30
000421 940e 0678 	CALL SUBOPT_0x15
000423 3050      	CPI  R21,0
000424 f009      	BREQ _0x2020096
000425 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000426 5041      	SUBI R20,LOW(1)
000427 cfec      	RJMP _0x2020091
                 _0x2020093:
000428 2f31      	MOV  R19,R17
000429 89ec      	LDD  R30,Y+20
00042a 30e0      	CPI  R30,0
00042b f4b9      	BRNE _0x2020097
                 _0x2020098:
00042c 3030      	CPI  R19,0
00042d f0a1      	BREQ _0x202009A
00042e ff03      	SBRS R16,3
00042f c006      	RJMP _0x202009B
000430 85ee      	LDD  R30,Y+14
000431 85ff      	LDD  R31,Y+14+1
000432 9125      	LPM  R18,Z+
000433 87ee      	STD  Y+14,R30
000434 87ff      	STD  Y+14+1,R31
000435 c005      	RJMP _0x202009C
                 _0x202009B:
000436 85ae      	LDD  R26,Y+14
000437 85bf      	LDD  R27,Y+14+1
000438 912d      	LD   R18,X+
000439 87ae      	STD  Y+14,R26
00043a 87bf      	STD  Y+14+1,R27
                 _0x202009C:
00043b 940e 0663 	CALL SUBOPT_0x12
00043d 3050      	CPI  R21,0
00043e f009      	BREQ _0x202009D
00043f 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000440 5031      	SUBI R19,LOW(1)
000441 cfea      	RJMP _0x2020098
                 _0x202009A:
000442 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
000443 940e 06b0 	CALL SUBOPT_0x1D
000445 940e 08c6 	CALL __DIVD21U
000447 2f2e      	MOV  R18,R30
000448 302a      	CPI  R18,10
000449 f030      	BRLO _0x20200A2
00044a ff03      	SBRS R16,3
00044b c002      	RJMP _0x20200A3
00044c 5c29      	SUBI R18,-LOW(55)
00044d c001      	RJMP _0x20200A4
                 _0x20200A3:
00044e 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
00044f c001      	RJMP _0x20200A5
                 _0x20200A2:
000450 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000451 fd04      	SBRC R16,4
000452 c021      	RJMP _0x20200A7
000453 3321      	CPI  R18,49
000454 f460      	BRSH _0x20200A9
                +
000455 89a8     +LDD R26 , Y + 16
000456 89b9     +LDD R27 , Y + 16 + 1
000457 898a     +LDD R24 , Y + 16 + 2
000458 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000459 30a1     +CPI R26 , LOW ( 0x1 )
00045a e0e0     +LDI R30 , HIGH ( 0x1 )
00045b 07be     +CPC R27 , R30
00045c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00045d 078e     +CPC R24 , R30
00045e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00045f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000460 f409      	BRNE _0x20200A8
                 _0x20200A9:
000461 c00b      	RJMP _0x20200AB
                 _0x20200A8:
000462 1743      	CP   R20,R19
000463 f440      	BRSH _0x2020116
000464 1753      	CP   R21,R19
000465 f010      	BRLO _0x20200AE
000466 ff00      	SBRS R16,0
000467 c001      	RJMP _0x20200AF
                 _0x20200AE:
000468 c010      	RJMP _0x20200AD
                 _0x20200AF:
000469 e220      	LDI  R18,LOW(32)
00046a ff07      	SBRS R16,7
00046b c008      	RJMP _0x20200B0
                 _0x2020116:
00046c e320      	LDI  R18,LOW(48)
                 _0x20200AB:
00046d 6100      	ORI  R16,LOW(16)
00046e ff02      	SBRS R16,2
00046f c004      	RJMP _0x20200B1
000470 940e 069e 	CALL SUBOPT_0x1C
000472 f009      	BREQ _0x20200B2
000473 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
000474 940e 0663 	CALL SUBOPT_0x12
000476 3050      	CPI  R21,0
000477 f009      	BREQ _0x20200B3
000478 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
000479 5031      	SUBI R19,LOW(1)
00047a 940e 06b0 	CALL SUBOPT_0x1D
00047c 940e 08f7 	CALL __MODD21U
00047e 940e 0685 	CALL SUBOPT_0x17
000480 89ec      	LDD  R30,Y+20
                +
000481 89a8     +LDD R26 , Y + 16
000482 89b9     +LDD R27 , Y + 16 + 1
000483 898a     +LDD R24 , Y + 16 + 2
000484 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000485 27ff      	CLR  R31
000486 2766      	CLR  R22
000487 2777      	CLR  R23
000488 940e 08c6 	CALL __DIVD21U
00048a 940e 05f3 	CALL SUBOPT_0x1
                +
00048c 89e8     +LDD R30 , Y + 16
00048d 89f9     +LDD R31 , Y + 16 + 1
00048e 896a     +LDD R22 , Y + 16 + 2
00048f 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000490 940e 0937 	CALL __CPD10
000492 f009      	BREQ _0x20200A1
000493 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
000494 ff00      	SBRS R16,0
000495 c008      	RJMP _0x20200B4
                 _0x20200B5:
000496 3050      	CPI  R21,0
000497 f031      	BREQ _0x20200B7
000498 5051      	SUBI R21,LOW(1)
000499 e2e0      	LDI  R30,LOW(32)
00049a 93ea      	ST   -Y,R30
00049b 940e 0678 	CALL SUBOPT_0x15
00049d cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
00049e e010      	LDI  R17,LOW(0)
                 _0x2020035:
00049f ce0c      	RJMP _0x2020030
                 _0x2020032:
0004a0 81ae      	LDD  R26,Y+6
0004a1 81bf      	LDD  R27,Y+6+1
0004a2 940e 0907 	CALL __GETW1P
0004a4 940e 0942 	CALL __LOADLOCR6
0004a6 96ef      	ADIW R28,63
0004a7 966f      	ADIW R28,31
0004a8 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004a9 92ff      	PUSH R15
0004aa 2ef8      	MOV  R15,R24
0004ab 9726      	SBIW R28,6
0004ac 940e 093d 	CALL __SAVELOCR4
0004ae 940e 06b9 	CALL SUBOPT_0x1E
0004b0 9730      	SBIW R30,0
0004b1 f419      	BRNE _0x20200B9
0004b2 efef      	LDI  R30,LOW(65535)
0004b3 efff      	LDI  R31,HIGH(65535)
0004b4 c023      	RJMP _0x20C0004
                 _0x20200B9:
0004b5 01de      	MOVW R26,R28
0004b6 9616      	ADIW R26,6
0004b7 940e 089c 	CALL __ADDW2R15
0004b9 018d      	MOVW R16,R26
0004ba 940e 06b9 	CALL SUBOPT_0x1E
0004bc 83ee      	STD  Y+6,R30
0004bd 83ff      	STD  Y+6+1,R31
0004be e0e0      	LDI  R30,LOW(0)
0004bf 87e8      	STD  Y+8,R30
0004c0 87e9      	STD  Y+8+1,R30
0004c1 01de      	MOVW R26,R28
0004c2 961a      	ADIW R26,10
0004c3 940e 089c 	CALL __ADDW2R15
0004c5 940e 0907 	CALL __GETW1P
0004c7 93fa      	ST   -Y,R31
0004c8 93ea      	ST   -Y,R30
0004c9 931a      	ST   -Y,R17
0004ca 930a      	ST   -Y,R16
0004cb e7e9      	LDI  R30,LOW(_put_buff_G101)
0004cc e0f1      	LDI  R31,HIGH(_put_buff_G101)
0004cd 93fa      	ST   -Y,R31
0004ce 93ea      	ST   -Y,R30
0004cf 01de      	MOVW R26,R28
0004d0 961a      	ADIW R26,10
0004d1 ddbd      	RCALL __print_G101
0004d2 019f      	MOVW R18,R30
0004d3 81ae      	LDD  R26,Y+6
0004d4 81bf      	LDD  R27,Y+6+1
0004d5 e0e0      	LDI  R30,LOW(0)
0004d6 93ec      	ST   X,R30
0004d7 01f9      	MOVW R30,R18
                 _0x20C0004:
0004d8 940e 0944 	CALL __LOADLOCR4
0004da 962a      	ADIW R28,10
0004db 90ff      	POP  R15
0004dc 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004dd 93ba      	ST   -Y,R27
0004de 93aa      	ST   -Y,R26
0004df 91e9          ld   r30,y+
0004e0 91f9          ld   r31,y+
0004e1 91a9          ld   r26,y+
0004e2 91b9          ld   r27,y+
0004e3 01cd          movw r24,r26
                 strcpyf0:
0004e4 9005      	lpm  r0,z+
0004e5 920d          st   x+,r0
0004e6 2000          tst  r0
0004e7 f7e1          brne strcpyf0
0004e8 01fc          movw r30,r24
0004e9 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004ea 93ba      	ST   -Y,R27
0004eb 93aa      	ST   -Y,R26
0004ec 91a9          ld   r26,y+
0004ed 91b9          ld   r27,y+
0004ee 27ee          clr  r30
0004ef 27ff          clr  r31
                 strlen0:
0004f0 916d          ld   r22,x+
0004f1 2366          tst  r22
0004f2 f011          breq strlen1
0004f3 9631          adiw r30,1
0004f4 cffb          rjmp strlen0
                 strlen1:
0004f5 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004f6 93ba      	ST   -Y,R27
0004f7 93aa      	ST   -Y,R26
0004f8 27aa          clr  r26
0004f9 27bb          clr  r27
0004fa 91e9          ld   r30,y+
0004fb 91f9          ld   r31,y+
                 strlenf0:
0004fc 9005      	lpm  r0,z+
0004fd 2000          tst  r0
0004fe f011          breq strlenf1
0004ff 9611          adiw r26,1
000500 cffb          rjmp strlenf0
                 strlenf1:
000501 01fd          movw r30,r26
000502 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000503 940e 0925 	CALL __PUTPARD2
000505 817b         ldd  r23,y+3
000506 816a         ldd  r22,y+2
000507 81f9         ldd  r31,y+1
000508 81e8         ld   r30,y
000509 fb77         bst  r23,7
00050a 0f77         lsl  r23
00050b fd67         sbrc r22,7
00050c 6071         sbr  r23,1
00050d 2f97         mov  r25,r23
00050e 579e         subi r25,0x7e
00050f f081         breq __ftrunc0
000510 f078         brcs __ftrunc0
000511 3198         cpi  r25,24
000512 f490         brsh __ftrunc1
000513 27aa         clr  r26
000514 27bb         clr  r27
000515 2788         clr  r24
                 __ftrunc2:
000516 9408         sec
000517 9587         ror  r24
000518 95b7         ror  r27
000519 95a7         ror  r26
00051a 959a         dec  r25
00051b f7d1         brne __ftrunc2
00051c 23ea         and  r30,r26
00051d 23fb         and  r31,r27
00051e 2368         and  r22,r24
00051f c005         rjmp __ftrunc1
                 __ftrunc0:
000520 94e8         clt
000521 2777         clr  r23
000522 27ee         clr  r30
000523 27ff         clr  r31
000524 2766         clr  r22
                 __ftrunc1:
000525 776f         cbr  r22,0x80
000526 9576         lsr  r23
000527 f408         brcc __ftrunc3
000528 6860         sbr  r22,0x80
                 __ftrunc3:
000529 f977         bld  r23,7
00052a 91a9         ld   r26,y+
00052b 91b9         ld   r27,y+
00052c 9189         ld   r24,y+
00052d 9199         ld   r25,y+
00052e 17ea         cp   r30,r26
00052f 07fb         cpc  r31,r27
000530 0768         cpc  r22,r24
000531 0779         cpc  r23,r25
000532 fb97         bst  r25,7
000533 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000534 940e 0925 	CALL __PUTPARD2
000536 940e 0916 	CALL __GETD2S0
000538 940e 0503 	CALL _ftrunc
00053a 940e 091b 	CALL __PUTD1S0
00053c f419          brne __floor1
                 __floor0:
00053d 940e 0911 	CALL __GETD1S0
00053f c009      	RJMP _0x20C0003
                 __floor1:
000540 f7e6          brtc __floor0
000541 940e 0911 	CALL __GETD1S0
                +
000543 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000544 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000545 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000546 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000547 940e 0792 	CALL __SUBF12
                 _0x20C0003:
000549 9624      	ADIW R28,4
00054a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00054b d0c0      	RCALL SUBOPT_0x5
00054c e0e0      	LDI  R30,LOW(0)
00054d 83ea      	STD  Y+2,R30
00054e e3ef      	LDI  R30,LOW(63)
00054f 83eb      	STD  Y+3,R30
000550 931a      	ST   -Y,R17
000551 930a      	ST   -Y,R16
000552 85eb      	LDD  R30,Y+11
000553 85fc      	LDD  R31,Y+11+1
000554 3fef      	CPI  R30,LOW(0xFFFF)
000555 efaf      	LDI  R26,HIGH(0xFFFF)
000556 07fa      	CPC  R31,R26
000557 f431      	BRNE _0x20A000D
000558 d167      	RCALL SUBOPT_0x1F
                +
000559 e6a8     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
00055a e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
00055b 940e 04dd 	CALL _strcpyf
00055d c08a      	RJMP _0x20C0002
                 _0x20A000D:
00055e 3fef      	CPI  R30,LOW(0x7FFF)
00055f e7af      	LDI  R26,HIGH(0x7FFF)
000560 07fa      	CPC  R31,R26
000561 f431      	BRNE _0x20A000C
000562 d15d      	RCALL SUBOPT_0x1F
                +
000563 e6a9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000564 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000565 940e 04dd 	CALL _strcpyf
000567 c080      	RJMP _0x20C0002
                 _0x20A000C:
000568 85ac      	LDD  R26,Y+12
000569 23aa      	TST  R26
00056a f452      	BRPL _0x20A000F
                +
00056b 85e9     +LDD R30 , Y + 9
00056c 85fa     +LDD R31 , Y + 9 + 1
00056d 856b     +LDD R22 , Y + 9 + 2
00056e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00056f 940e 06f3 	CALL __ANEGF1
000571 d153      	RCALL SUBOPT_0x20
000572 d157      	RCALL SUBOPT_0x21
000573 e2ed      	LDI  R30,LOW(45)
000574 93ec      	ST   X,R30
                 _0x20A000F:
000575 85a8      	LDD  R26,Y+8
000576 30a7      	CPI  R26,LOW(0x7)
000577 f010      	BRLO _0x20A0010
000578 e0e6      	LDI  R30,LOW(6)
000579 87e8      	STD  Y+8,R30
                 _0x20A0010:
00057a 8518      	LDD  R17,Y+8
                 _0x20A0011:
00057b 2fe1      	MOV  R30,R17
00057c 5011      	SUBI R17,1
00057d 30e0      	CPI  R30,0
00057e f021      	BREQ _0x20A0013
00057f d151      	RCALL SUBOPT_0x22
000580 d0c4      	RCALL SUBOPT_0xD
000581 d154      	RCALL SUBOPT_0x23
000582 cff8      	RJMP _0x20A0011
                 _0x20A0013:
000583 d157      	RCALL SUBOPT_0x24
000584 940e 0799 	CALL __ADDF12
000586 d13e      	RCALL SUBOPT_0x20
000587 e010      	LDI  R17,LOW(0)
                +
000588 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000589 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00058a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00058b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00058c d149      	RCALL SUBOPT_0x23
                 _0x20A0014:
00058d d14d      	RCALL SUBOPT_0x24
00058e 940e 087c 	CALL __CMPF12
000590 f068      	BRLO _0x20A0016
000591 d13f      	RCALL SUBOPT_0x22
000592 d059      	RCALL SUBOPT_0x0
000593 d142      	RCALL SUBOPT_0x23
000594 5f1f      	SUBI R17,-LOW(1)
000595 3217      	CPI  R17,39
000596 f030      	BRLO _0x20A0017
000597 d128      	RCALL SUBOPT_0x1F
                +
000598 e6ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000599 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
00059a 940e 04dd 	CALL _strcpyf
00059c c04b      	RJMP _0x20C0002
                 _0x20A0017:
00059d cfef      	RJMP _0x20A0014
                 _0x20A0016:
00059e 3010      	CPI  R17,0
00059f f421      	BRNE _0x20A0018
0005a0 d129      	RCALL SUBOPT_0x21
0005a1 e3e0      	LDI  R30,LOW(48)
0005a2 93ec      	ST   X,R30
0005a3 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005a4 2fe1      	MOV  R30,R17
0005a5 5011      	SUBI R17,1
0005a6 30e0      	CPI  R30,0
0005a7 f0e1      	BREQ _0x20A001C
0005a8 d128      	RCALL SUBOPT_0x22
0005a9 d09b      	RCALL SUBOPT_0xD
0005aa d093      	RCALL SUBOPT_0xC
0005ab 01df      	MOVW R26,R30
0005ac 01cb      	MOVW R24,R22
0005ad 940e 0534 	CALL _floor
0005af d126      	RCALL SUBOPT_0x23
0005b0 d12a      	RCALL SUBOPT_0x24
0005b1 940e 0837 	CALL __DIVF21
0005b3 940e 0726 	CALL __CFD1U
0005b5 2f0e      	MOV  R16,R30
0005b6 d113      	RCALL SUBOPT_0x21
0005b7 d09b      	RCALL SUBOPT_0xF
0005b8 e0f0      	LDI  R31,0
0005b9 d117      	RCALL SUBOPT_0x22
0005ba 940e 08ae 	CALL __CWD1
0005bc 940e 075f 	CALL __CDF1
0005be 940e 07e9 	CALL __MULF12
0005c0 d123      	RCALL SUBOPT_0x25
0005c1 d096      	RCALL SUBOPT_0x10
0005c2 d102      	RCALL SUBOPT_0x20
0005c3 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005c4 85e8      	LDD  R30,Y+8
0005c5 30e0      	CPI  R30,0
0005c6 f0e9      	BREQ _0x20C0001
0005c7 d102      	RCALL SUBOPT_0x21
0005c8 e2ee      	LDI  R30,LOW(46)
0005c9 93ec      	ST   X,R30
                 _0x20A001E:
0005ca 85e8      	LDD  R30,Y+8
0005cb 50e1      	SUBI R30,LOW(1)
0005cc 87e8      	STD  Y+8,R30
0005cd 5fef      	SUBI R30,-LOW(1)
0005ce f0a9      	BREQ _0x20A0020
0005cf d114      	RCALL SUBOPT_0x25
0005d0 d01b      	RCALL SUBOPT_0x0
0005d1 d0f3      	RCALL SUBOPT_0x20
                +
0005d2 85e9     +LDD R30 , Y + 9
0005d3 85fa     +LDD R31 , Y + 9 + 1
0005d4 856b     +LDD R22 , Y + 9 + 2
0005d5 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005d6 940e 0726 	CALL __CFD1U
0005d8 2f0e      	MOV  R16,R30
0005d9 d0f0      	RCALL SUBOPT_0x21
0005da d078      	RCALL SUBOPT_0xF
0005db e0f0      	LDI  R31,0
0005dc d107      	RCALL SUBOPT_0x25
0005dd 940e 08ae 	CALL __CWD1
0005df 940e 075f 	CALL __CDF1
0005e1 d076      	RCALL SUBOPT_0x10
0005e2 d0e2      	RCALL SUBOPT_0x20
0005e3 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005e4 81ae      	LDD  R26,Y+6
0005e5 81bf      	LDD  R27,Y+6+1
0005e6 e0e0      	LDI  R30,LOW(0)
0005e7 93ec      	ST   X,R30
                 _0x20C0002:
0005e8 8119      	LDD  R17,Y+1
0005e9 8108      	LDD  R16,Y+0
0005ea 962d      	ADIW R28,13
0005eb 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 __seed_G105:
000164           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x0:
                +
0005ec e0e0     +LDI R30 , LOW ( 0x41200000 )
0005ed e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005ee e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005ef e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005f0 940e 07e9 	CALL __MULF12
0005f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
                +
0005f3 8be8     +STD Y + 16 , R30
0005f4 8bf9     +STD Y + 16 + 1 , R31
0005f5 8b6a     +STD Y + 16 + 2 , R22
0005f6 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0005f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0005f8 940e 00ef 	CALL __lcd_write_data
0005fa e0a3      	LDI  R26,LOW(3)
0005fb e0b0      	LDI  R27,0
0005fc 940c 06e9 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
0005fe e3a0      	LDI  R26,LOW(48)
0005ff 940e 00db 	CALL __lcd_write_nibble_G100
                +
000601 ec88     +LDI R24 , LOW ( 200 )
000602 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000603 9701     +SBIW R24 , 1
000604 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000605 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000606 91ed      	LD   R30,X+
000607 91fd      	LD   R31,X+
000608 9631      	ADIW R30,1
000609 93fe      	ST   -X,R31
00060a 93ee      	ST   -X,R30
00060b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
00060c 93ba      	ST   -Y,R27
00060d 93aa      	ST   -Y,R26
00060e 9724      	SBIW R28,4
00060f e0e0      	LDI  R30,LOW(0)
000610 83e8      	ST   Y,R30
000611 83e9      	STD  Y+1,R30
000612 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
                +
000613 81ac     +LDD R26 , Y + 4
000614 81bd     +LDD R27 , Y + 4 + 1
000615 818e     +LDD R24 , Y + 4 + 2
000616 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000617 cfd4      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
                +
000618 83ec     +STD Y + 4 , R30
000619 83fd     +STD Y + 4 + 1 , R31
00061a 836e     +STD Y + 4 + 2 , R22
00061b 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00061c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8:
                +
00061d 81ec     +LDD R30 , Y + 4
00061e 81fd     +LDD R31 , Y + 4 + 1
00061f 816e     +LDD R22 , Y + 4 + 2
000620 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000621 85ac     +LDD R26 , Y + 12
000622 85bd     +LDD R27 , Y + 12 + 1
000623 858e     +LDD R24 , Y + 12 + 2
000624 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000625 940e 087c 	CALL __CMPF12
000627 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
000628 85ac     +LDD R26 , Y + 12
000629 85bd     +LDD R27 , Y + 12 + 1
00062a 858e     +LDD R24 , Y + 12 + 2
00062b 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00062c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
                +
00062d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00062e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00062f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000630 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000631 940e 07e9 	CALL __MULF12
                +
000633 87ec     +STD Y + 12 , R30
000634 87fd     +STD Y + 12 + 1 , R31
000635 876e     +STD Y + 12 + 2 , R22
000636 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000637 5f3f      	SUBI R19,-LOW(1)
000638 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000639 87ec     +STD Y + 12 , R30
00063a 87fd     +STD Y + 12 + 1 , R31
00063b 876e     +STD Y + 12 + 2 , R22
00063c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00063d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
00063e e0a0     +LDI R26 , LOW ( 0x3F000000 )
00063f e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000640 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000641 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000642 940e 0799 	CALL __ADDF12
000644 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
000645 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000646 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000647 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000648 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000649 940e 07e9 	CALL __MULF12
00064b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00064c 85a8      	LDD  R26,Y+8
00064d 85b9      	LDD  R27,Y+8+1
00064e 9611      	ADIW R26,1
00064f 87a8      	STD  Y+8,R26
000650 87b9      	STD  Y+8+1,R27
000651 9711      	SBIW R26,1
000652 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000653 2fe0      	MOV  R30,R16
000654 5de0      	SUBI R30,-LOW(48)
000655 93ec      	ST   X,R30
000656 2fe0      	MOV  R30,R16
000657 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000658 940e 092a 	CALL __SWAPD12
00065a 940e 0792 	CALL __SUBF12
00065c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
00065d 85e8      	LDD  R30,Y+8
00065e 85f9      	LDD  R31,Y+8+1
00065f 9631      	ADIW R30,1
000660 87e8      	STD  Y+8,R30
000661 87f9      	STD  Y+8+1,R31
000662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000663 932a      	ST   -Y,R18
000664 81af      	LDD  R26,Y+7
000665 85b8      	LDD  R27,Y+7+1
000666 85e9      	LDD  R30,Y+9
000667 85fa      	LDD  R31,Y+9+1
000668 9509      	ICALL
000669 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x13:
                +
00066a 01fe     +MOVW R30 , R28
00066b 5ae6     +SUBI R30 , LOW ( - 90 )
00066c 4fff     +SBCI R31 , HIGH ( - 90 )
00066d 9001     +LD R0 , Z +
00066e 81f0     +LD R31 , Z
00066f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000670 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x14:
000671 9734      	SBIW R30,4
                +
000672 01de     +MOVW R26 , R28
000673 5aa6     +SUBI R26 , LOW ( - 90 )
000674 4fbf     +SBCI R27 , HIGH ( - 90 )
000675 93ed     +ST X + , R30
000676 93fc     +ST X , R31
                 	__PUTW1SX 90
000677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000678 81af      	LDD  R26,Y+7
000679 85b8      	LDD  R27,Y+7+1
00067a 85e9      	LDD  R30,Y+9
00067b 85fa      	LDD  R31,Y+9+1
00067c 9509      	ICALL
00067d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x16:
                +
00067e 01de     +MOVW R26 , R28
00067f 5aa6     +SUBI R26 , LOW ( - 90 )
000680 4fbf     +SBCI R27 , HIGH ( - 90 )
000681 900d     +LD R0 , X +
000682 91bc     +LD R27 , X
000683 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
000685 87ea     +STD Y + 10 , R30
000686 87fb     +STD Y + 10 + 1 , R31
000687 876c     +STD Y + 10 + 2 , R22
000688 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000689 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
00068a dfdf      	RCALL SUBOPT_0x13
00068b cfe5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
00068c 85ea     +LDD R30 , Y + 10
00068d 85fb     +LDD R31 , Y + 10 + 1
00068e 856c     +LDD R22 , Y + 10 + 2
00068f 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
000691 87ee      	STD  Y+14,R30
000692 87ff      	STD  Y+14+1,R31
000693 85ae      	LDD  R26,Y+14
000694 85bf      	LDD  R27,Y+14+1
000695 940e 04ea 	CALL _strlen
000697 2f1e      	MOV  R17,R30
000698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000699 dfe4      	RCALL SUBOPT_0x16
00069a 9614      	ADIW R26,4
00069b 940e 0907 	CALL __GETW1P
00069d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C:
00069e 7f0b      	ANDI R16,LOW(251)
00069f 89ed      	LDD  R30,Y+21
0006a0 93ea      	ST   -Y,R30
                +
0006a1 01de     +MOVW R26 , R28
0006a2 5aa9     +SUBI R26 , LOW ( - 87 )
0006a3 4fbf     +SBCI R27 , HIGH ( - 87 )
0006a4 900d     +LD R0 , X +
0006a5 91bc     +LD R27 , X
0006a6 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006a7 01fe     +MOVW R30 , R28
0006a8 5ae7     +SUBI R30 , LOW ( - 89 )
0006a9 4fff     +SBCI R31 , HIGH ( - 89 )
0006aa 9001     +LD R0 , Z +
0006ab 81f0     +LD R31 , Z
0006ac 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006ad 9509      	ICALL
0006ae 3050      	CPI  R21,0
0006af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
0006b0 89e8     +LDD R30 , Y + 16
0006b1 89f9     +LDD R31 , Y + 16 + 1
0006b2 896a     +LDD R22 , Y + 16 + 2
0006b3 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0006b4 85aa     +LDD R26 , Y + 10
0006b5 85bb     +LDD R27 , Y + 10 + 1
0006b6 858c     +LDD R24 , Y + 10 + 2
0006b7 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0006b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
0006b9 01de      	MOVW R26,R28
0006ba 961c      	ADIW R26,12
0006bb 940e 089c 	CALL __ADDW2R15
0006bd 940e 0907 	CALL __GETW1P
0006bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
0006c0 81ee      	LDD  R30,Y+6
0006c1 81ff      	LDD  R31,Y+6+1
0006c2 93fa      	ST   -Y,R31
0006c3 93ea      	ST   -Y,R30
0006c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
0006c5 87e9     +STD Y + 9 , R30
0006c6 87fa     +STD Y + 9 + 1 , R31
0006c7 876b     +STD Y + 9 + 2 , R22
0006c8 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
0006ca 81ae      	LDD  R26,Y+6
0006cb 81bf      	LDD  R27,Y+6+1
0006cc 9611      	ADIW R26,1
0006cd 83ae      	STD  Y+6,R26
0006ce 83bf      	STD  Y+6+1,R27
0006cf 9711      	SBIW R26,1
0006d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0006d1 81aa     +LDD R26 , Y + 2
0006d2 81bb     +LDD R27 , Y + 2 + 1
0006d3 818c     +LDD R24 , Y + 2 + 2
0006d4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0006d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
0006d6 83ea     +STD Y + 2 , R30
0006d7 83fb     +STD Y + 2 + 1 , R31
0006d8 836c     +STD Y + 2 + 2 , R22
0006d9 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
0006db 81ea     +LDD R30 , Y + 2
0006dc 81fb     +LDD R31 , Y + 2 + 1
0006dd 816c     +LDD R22 , Y + 2 + 2
0006de 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006df 85a9     +LDD R26 , Y + 9
0006e0 85ba     +LDD R27 , Y + 9 + 1
0006e1 858b     +LDD R24 , Y + 9 + 2
0006e2 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
0006e4 85a9     +LDD R26 , Y + 9
0006e5 85ba     +LDD R27 , Y + 9 + 1
0006e6 858b     +LDD R24 , Y + 9 + 2
0006e7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006e8 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0006e9 9610      	adiw r26,0
0006ea f039      	breq __delay_ms1
                 __delay_ms0:
                +
0006eb ed80     +LDI R24 , LOW ( 0x7D0 )
0006ec e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0006ed 9701     +SBIW R24 , 1
0006ee f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0006ef 95a8      	wdr
0006f0 9711      	sbiw r26,1
0006f1 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006f2 9508      	ret
                 
                 __ANEGF1:
0006f3 9730      	SBIW R30,0
0006f4 4060      	SBCI R22,0
0006f5 4070      	SBCI R23,0
0006f6 f009      	BREQ __ANEGF10
0006f7 5870      	SUBI R23,0x80
                 __ANEGF10:
0006f8 9508      	RET
                 
                 __ROUND_REPACK:
0006f9 2355      	TST  R21
0006fa f442      	BRPL __REPACK
0006fb 3850      	CPI  R21,0x80
0006fc f411      	BRNE __ROUND_REPACK0
0006fd ffe0      	SBRS R30,0
0006fe c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006ff 9631      	ADIW R30,1
000700 1f69      	ADC  R22,R25
000701 1f79      	ADC  R23,R25
000702 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000703 e850      	LDI  R21,0x80
000704 2757      	EOR  R21,R23
000705 f411      	BRNE __REPACK0
000706 935f      	PUSH R21
000707 c0cf      	RJMP __ZERORES
                 __REPACK0:
000708 3f5f      	CPI  R21,0xFF
000709 f031      	BREQ __REPACK1
00070a 0f66      	LSL  R22
00070b 0c00      	LSL  R0
00070c 9557      	ROR  R21
00070d 9567      	ROR  R22
00070e 2f75      	MOV  R23,R21
00070f 9508      	RET
                 __REPACK1:
000710 935f      	PUSH R21
000711 2000      	TST  R0
000712 f00a      	BRMI __REPACK2
000713 c0cf      	RJMP __MAXRES
                 __REPACK2:
000714 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000715 e850      	LDI  R21,0x80
000716 2e19      	MOV  R1,R25
000717 2215      	AND  R1,R21
000718 0f88      	LSL  R24
000719 1f99      	ROL  R25
00071a 2795      	EOR  R25,R21
00071b 0f55      	LSL  R21
00071c 9587      	ROR  R24
                 
                 __UNPACK1:
00071d e850      	LDI  R21,0x80
00071e 2e07      	MOV  R0,R23
00071f 2205      	AND  R0,R21
000720 0f66      	LSL  R22
000721 1f77      	ROL  R23
000722 2775      	EOR  R23,R21
000723 0f55      	LSL  R21
000724 9567      	ROR  R22
000725 9508      	RET
                 
                 __CFD1U:
000726 9468      	SET
000727 c001      	RJMP __CFD1U0
                 __CFD1:
000728 94e8      	CLT
                 __CFD1U0:
000729 935f      	PUSH R21
00072a dff2      	RCALL __UNPACK1
00072b 3870      	CPI  R23,0x80
00072c f018      	BRLO __CFD10
00072d 3f7f      	CPI  R23,0xFF
00072e f408      	BRCC __CFD10
00072f c0a7      	RJMP __ZERORES
                 __CFD10:
000730 e156      	LDI  R21,22
000731 1b57      	SUB  R21,R23
000732 f4aa      	BRPL __CFD11
000733 9551      	NEG  R21
000734 3058      	CPI  R21,8
000735 f40e      	BRTC __CFD19
000736 3059      	CPI  R21,9
                 __CFD19:
000737 f030      	BRLO __CFD17
000738 efef      	SER  R30
000739 efff      	SER  R31
00073a ef6f      	SER  R22
00073b e77f      	LDI  R23,0x7F
00073c f977      	BLD  R23,7
00073d c01a      	RJMP __CFD15
                 __CFD17:
00073e 2777      	CLR  R23
00073f 2355      	TST  R21
000740 f0b9      	BREQ __CFD15
                 __CFD18:
000741 0fee      	LSL  R30
000742 1fff      	ROL  R31
000743 1f66      	ROL  R22
000744 1f77      	ROL  R23
000745 955a      	DEC  R21
000746 f7d1      	BRNE __CFD18
000747 c010      	RJMP __CFD15
                 __CFD11:
000748 2777      	CLR  R23
                 __CFD12:
000749 3058      	CPI  R21,8
00074a f028      	BRLO __CFD13
00074b 2fef      	MOV  R30,R31
00074c 2ff6      	MOV  R31,R22
00074d 2f67      	MOV  R22,R23
00074e 5058      	SUBI R21,8
00074f cff9      	RJMP __CFD12
                 __CFD13:
000750 2355      	TST  R21
000751 f031      	BREQ __CFD15
                 __CFD14:
000752 9576      	LSR  R23
000753 9567      	ROR  R22
000754 95f7      	ROR  R31
000755 95e7      	ROR  R30
000756 955a      	DEC  R21
000757 f7d1      	BRNE __CFD14
                 __CFD15:
000758 2000      	TST  R0
000759 f40a      	BRPL __CFD16
00075a d145      	RCALL __ANEGD1
                 __CFD16:
00075b 915f      	POP  R21
00075c 9508      	RET
                 
                 __CDF1U:
00075d 9468      	SET
00075e c001      	RJMP __CDF1U0
                 __CDF1:
00075f 94e8      	CLT
                 __CDF1U0:
000760 9730      	SBIW R30,0
000761 4060      	SBCI R22,0
000762 4070      	SBCI R23,0
000763 f0b1      	BREQ __CDF10
000764 2400      	CLR  R0
000765 f026      	BRTS __CDF11
000766 2377      	TST  R23
000767 f412      	BRPL __CDF11
000768 9400      	COM  R0
000769 d136      	RCALL __ANEGD1
                 __CDF11:
00076a 2e17      	MOV  R1,R23
00076b e17e      	LDI  R23,30
00076c 2011      	TST  R1
                 __CDF12:
00076d f032      	BRMI __CDF13
00076e 957a      	DEC  R23
00076f 0fee      	LSL  R30
000770 1fff      	ROL  R31
000771 1f66      	ROL  R22
000772 1c11      	ROL  R1
000773 cff9      	RJMP __CDF12
                 __CDF13:
000774 2fef      	MOV  R30,R31
000775 2ff6      	MOV  R31,R22
000776 2d61      	MOV  R22,R1
000777 935f      	PUSH R21
000778 df8a      	RCALL __REPACK
000779 915f      	POP  R21
                 __CDF10:
00077a 9508      	RET
                 
                 __SWAPACC:
00077b 934f      	PUSH R20
00077c 01af      	MOVW R20,R30
00077d 01fd      	MOVW R30,R26
00077e 01da      	MOVW R26,R20
00077f 01ab      	MOVW R20,R22
000780 01bc      	MOVW R22,R24
000781 01ca      	MOVW R24,R20
000782 2d40      	MOV  R20,R0
000783 2c01      	MOV  R0,R1
000784 2e14      	MOV  R1,R20
000785 914f      	POP  R20
000786 9508      	RET
                 
                 __UADD12:
000787 0fea      	ADD  R30,R26
000788 1ffb      	ADC  R31,R27
000789 1f68      	ADC  R22,R24
00078a 9508      	RET
                 
                 __NEGMAN1:
00078b 95e0      	COM  R30
00078c 95f0      	COM  R31
00078d 9560      	COM  R22
00078e 5fef      	SUBI R30,-1
00078f 4fff      	SBCI R31,-1
000790 4f6f      	SBCI R22,-1
000791 9508      	RET
                 
                 __SUBF12:
000792 935f      	PUSH R21
000793 df81      	RCALL __UNPACK
000794 3890      	CPI  R25,0x80
000795 f171      	BREQ __ADDF129
000796 e850      	LDI  R21,0x80
000797 2615      	EOR  R1,R21
                 
000798 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000799 935f      	PUSH R21
00079a df7a      	RCALL __UNPACK
00079b 3890      	CPI  R25,0x80
00079c f139      	BREQ __ADDF129
                 
                 __ADDF120:
00079d 3870      	CPI  R23,0x80
00079e f121      	BREQ __ADDF128
                 __ADDF121:
00079f 2f57      	MOV  R21,R23
0007a0 1b59      	SUB  R21,R25
0007a1 f12b      	BRVS __ADDF1211
0007a2 f412      	BRPL __ADDF122
0007a3 dfd7      	RCALL __SWAPACC
0007a4 cffa      	RJMP __ADDF121
                 __ADDF122:
0007a5 3158      	CPI  R21,24
0007a6 f018      	BRLO __ADDF123
0007a7 27aa      	CLR  R26
0007a8 27bb      	CLR  R27
0007a9 2788      	CLR  R24
                 __ADDF123:
0007aa 3058      	CPI  R21,8
0007ab f028      	BRLO __ADDF124
0007ac 2fab      	MOV  R26,R27
0007ad 2fb8      	MOV  R27,R24
0007ae 2788      	CLR  R24
0007af 5058      	SUBI R21,8
0007b0 cff9      	RJMP __ADDF123
                 __ADDF124:
0007b1 2355      	TST  R21
0007b2 f029      	BREQ __ADDF126
                 __ADDF125:
0007b3 9586      	LSR  R24
0007b4 95b7      	ROR  R27
0007b5 95a7      	ROR  R26
0007b6 955a      	DEC  R21
0007b7 f7d9      	BRNE __ADDF125
                 __ADDF126:
0007b8 2d50      	MOV  R21,R0
0007b9 2551      	EOR  R21,R1
0007ba f072      	BRMI __ADDF127
0007bb dfcb      	RCALL __UADD12
0007bc f438      	BRCC __ADDF129
0007bd 9567      	ROR  R22
0007be 95f7      	ROR  R31
0007bf 95e7      	ROR  R30
0007c0 9573      	INC  R23
0007c1 f413      	BRVC __ADDF129
0007c2 c020      	RJMP __MAXRES
                 __ADDF128:
0007c3 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007c4 df3e      	RCALL __REPACK
0007c5 915f      	POP  R21
0007c6 9508      	RET
                 __ADDF1211:
0007c7 f7d8      	BRCC __ADDF128
0007c8 cffb      	RJMP __ADDF129
                 __ADDF127:
0007c9 1bea      	SUB  R30,R26
0007ca 0bfb      	SBC  R31,R27
0007cb 0b68      	SBC  R22,R24
0007cc f051      	BREQ __ZERORES
0007cd f410      	BRCC __ADDF1210
0007ce 9400      	COM  R0
0007cf dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007d0 2366      	TST  R22
0007d1 f392      	BRMI __ADDF129
0007d2 0fee      	LSL  R30
0007d3 1fff      	ROL  R31
0007d4 1f66      	ROL  R22
0007d5 957a      	DEC  R23
0007d6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007d7 27ee      	CLR  R30
0007d8 27ff      	CLR  R31
0007d9 2766      	CLR  R22
0007da 2777      	CLR  R23
0007db 915f      	POP  R21
0007dc 9508      	RET
                 
                 __MINRES:
0007dd efef      	SER  R30
0007de efff      	SER  R31
0007df e76f      	LDI  R22,0x7F
0007e0 ef7f      	SER  R23
0007e1 915f      	POP  R21
0007e2 9508      	RET
                 
                 __MAXRES:
0007e3 efef      	SER  R30
0007e4 efff      	SER  R31
0007e5 e76f      	LDI  R22,0x7F
0007e6 e77f      	LDI  R23,0x7F
0007e7 915f      	POP  R21
0007e8 9508      	RET
                 
                 __MULF12:
0007e9 935f      	PUSH R21
0007ea df2a      	RCALL __UNPACK
0007eb 3870      	CPI  R23,0x80
0007ec f351      	BREQ __ZERORES
0007ed 3890      	CPI  R25,0x80
0007ee f341      	BREQ __ZERORES
0007ef 2401      	EOR  R0,R1
0007f0 9408      	SEC
0007f1 1f79      	ADC  R23,R25
0007f2 f423      	BRVC __MULF124
0007f3 f31c      	BRLT __ZERORES
                 __MULF125:
0007f4 2000      	TST  R0
0007f5 f33a      	BRMI __MINRES
0007f6 cfec      	RJMP __MAXRES
                 __MULF124:
0007f7 920f      	PUSH R0
0007f8 931f      	PUSH R17
0007f9 932f      	PUSH R18
0007fa 933f      	PUSH R19
0007fb 934f      	PUSH R20
0007fc 2711      	CLR  R17
0007fd 2722      	CLR  R18
0007fe 2799      	CLR  R25
0007ff 9f68      	MUL  R22,R24
000800 01a0      	MOVW R20,R0
000801 9f8f      	MUL  R24,R31
000802 2d30      	MOV  R19,R0
000803 0d41      	ADD  R20,R1
000804 1f59      	ADC  R21,R25
000805 9f6b      	MUL  R22,R27
000806 0d30      	ADD  R19,R0
000807 1d41      	ADC  R20,R1
000808 1f59      	ADC  R21,R25
000809 9f8e      	MUL  R24,R30
00080a d027      	RCALL __MULF126
00080b 9fbf      	MUL  R27,R31
00080c d025      	RCALL __MULF126
00080d 9f6a      	MUL  R22,R26
00080e d023      	RCALL __MULF126
00080f 9fbe      	MUL  R27,R30
000810 d01d      	RCALL __MULF127
000811 9faf      	MUL  R26,R31
000812 d01b      	RCALL __MULF127
000813 9fae      	MUL  R26,R30
000814 0d11      	ADD  R17,R1
000815 1f29      	ADC  R18,R25
000816 1f39      	ADC  R19,R25
000817 1f49      	ADC  R20,R25
000818 1f59      	ADC  R21,R25
000819 2fe3      	MOV  R30,R19
00081a 2ff4      	MOV  R31,R20
00081b 2f65      	MOV  R22,R21
00081c 2f52      	MOV  R21,R18
00081d 914f      	POP  R20
00081e 913f      	POP  R19
00081f 912f      	POP  R18
000820 911f      	POP  R17
000821 900f      	POP  R0
000822 2366      	TST  R22
000823 f02a      	BRMI __MULF122
000824 0f55      	LSL  R21
000825 1fee      	ROL  R30
000826 1fff      	ROL  R31
000827 1f66      	ROL  R22
000828 c002      	RJMP __MULF123
                 __MULF122:
000829 9573      	INC  R23
00082a f24b      	BRVS __MULF125
                 __MULF123:
00082b decd      	RCALL __ROUND_REPACK
00082c 915f      	POP  R21
00082d 9508      	RET
                 
                 __MULF127:
00082e 0d10      	ADD  R17,R0
00082f 1d21      	ADC  R18,R1
000830 1f39      	ADC  R19,R25
000831 c002      	RJMP __MULF128
                 __MULF126:
000832 0d20      	ADD  R18,R0
000833 1d31      	ADC  R19,R1
                 __MULF128:
000834 1f49      	ADC  R20,R25
000835 1f59      	ADC  R21,R25
000836 9508      	RET
                 
                 __DIVF21:
000837 935f      	PUSH R21
000838 dedc      	RCALL __UNPACK
000839 3870      	CPI  R23,0x80
00083a f421      	BRNE __DIVF210
00083b 2011      	TST  R1
                 __DIVF211:
00083c f40a      	BRPL __DIVF219
00083d cf9f      	RJMP __MINRES
                 __DIVF219:
00083e cfa4      	RJMP __MAXRES
                 __DIVF210:
00083f 3890      	CPI  R25,0x80
000840 f409      	BRNE __DIVF218
                 __DIVF217:
000841 cf95      	RJMP __ZERORES
                 __DIVF218:
000842 2401      	EOR  R0,R1
000843 9408      	SEC
000844 0b97      	SBC  R25,R23
000845 f41b      	BRVC __DIVF216
000846 f3d4      	BRLT __DIVF217
000847 2000      	TST  R0
000848 cff3      	RJMP __DIVF211
                 __DIVF216:
000849 2f79      	MOV  R23,R25
00084a 931f      	PUSH R17
00084b 932f      	PUSH R18
00084c 933f      	PUSH R19
00084d 934f      	PUSH R20
00084e 2411      	CLR  R1
00084f 2711      	CLR  R17
000850 2722      	CLR  R18
000851 2733      	CLR  R19
000852 2744      	CLR  R20
000853 2755      	CLR  R21
000854 e290      	LDI  R25,32
                 __DIVF212:
000855 17ae      	CP   R26,R30
000856 07bf      	CPC  R27,R31
000857 0786      	CPC  R24,R22
000858 0741      	CPC  R20,R17
000859 f030      	BRLO __DIVF213
00085a 1bae      	SUB  R26,R30
00085b 0bbf      	SBC  R27,R31
00085c 0b86      	SBC  R24,R22
00085d 0b41      	SBC  R20,R17
00085e 9408      	SEC
00085f c001      	RJMP __DIVF214
                 __DIVF213:
000860 9488      	CLC
                 __DIVF214:
000861 1f55      	ROL  R21
000862 1f22      	ROL  R18
000863 1f33      	ROL  R19
000864 1c11      	ROL  R1
000865 1faa      	ROL  R26
000866 1fbb      	ROL  R27
000867 1f88      	ROL  R24
000868 1f44      	ROL  R20
000869 959a      	DEC  R25
00086a f751      	BRNE __DIVF212
00086b 01f9      	MOVW R30,R18
00086c 2d61      	MOV  R22,R1
00086d 914f      	POP  R20
00086e 913f      	POP  R19
00086f 912f      	POP  R18
000870 911f      	POP  R17
000871 2366      	TST  R22
000872 f032      	BRMI __DIVF215
000873 0f55      	LSL  R21
000874 1fee      	ROL  R30
000875 1fff      	ROL  R31
000876 1f66      	ROL  R22
000877 957a      	DEC  R23
000878 f243      	BRVS __DIVF217
                 __DIVF215:
000879 de7f      	RCALL __ROUND_REPACK
00087a 915f      	POP  R21
00087b 9508      	RET
                 
                 __CMPF12:
00087c 2399      	TST  R25
00087d f09a      	BRMI __CMPF120
00087e 2377      	TST  R23
00087f f042      	BRMI __CMPF121
000880 1797      	CP   R25,R23
000881 f048      	BRLO __CMPF122
000882 f429      	BRNE __CMPF121
000883 17ae      	CP   R26,R30
000884 07bf      	CPC  R27,R31
000885 0786      	CPC  R24,R22
000886 f020      	BRLO __CMPF122
000887 f031      	BREQ __CMPF123
                 __CMPF121:
000888 9498      	CLZ
000889 9488      	CLC
00088a 9508      	RET
                 __CMPF122:
00088b 9498      	CLZ
00088c 9408      	SEC
00088d 9508      	RET
                 __CMPF123:
00088e 9418      	SEZ
00088f 9488      	CLC
000890 9508      	RET
                 __CMPF120:
000891 2377      	TST  R23
000892 f7c2      	BRPL __CMPF122
000893 1797      	CP   R25,R23
000894 f398      	BRLO __CMPF121
000895 f7a9      	BRNE __CMPF122
000896 17ea      	CP   R30,R26
000897 07fb      	CPC  R31,R27
000898 0768      	CPC  R22,R24
000899 f388      	BRLO __CMPF122
00089a f399      	BREQ __CMPF123
00089b cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00089c 2400      	CLR  R0
00089d 0daf      	ADD  R26,R15
00089e 1db0      	ADC  R27,R0
00089f 9508      	RET
                 
                 __ANEGD1:
0008a0 95f0      	COM  R31
0008a1 9560      	COM  R22
0008a2 9570      	COM  R23
0008a3 95e1      	NEG  R30
0008a4 4fff      	SBCI R31,-1
0008a5 4f6f      	SBCI R22,-1
0008a6 4f7f      	SBCI R23,-1
0008a7 9508      	RET
                 
                 __CBD1:
0008a8 2ffe      	MOV  R31,R30
0008a9 0fff      	ADD  R31,R31
0008aa 0bff      	SBC  R31,R31
0008ab 2f6f      	MOV  R22,R31
0008ac 2f7f      	MOV  R23,R31
0008ad 9508      	RET
                 
                 __CWD1:
0008ae 2f6f      	MOV  R22,R31
0008af 0f66      	ADD  R22,R22
0008b0 0b66      	SBC  R22,R22
0008b1 2f76      	MOV  R23,R22
0008b2 9508      	RET
                 
                 __DIVB21U:
0008b3 2400      	CLR  R0
0008b4 e098      	LDI  R25,8
                 __DIVB21U1:
0008b5 0faa      	LSL  R26
0008b6 1c00      	ROL  R0
0008b7 1a0e      	SUB  R0,R30
0008b8 f410      	BRCC __DIVB21U2
0008b9 0e0e      	ADD  R0,R30
0008ba c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008bb 60a1      	SBR  R26,1
                 __DIVB21U3:
0008bc 959a      	DEC  R25
0008bd f7b9      	BRNE __DIVB21U1
0008be 2fea      	MOV  R30,R26
0008bf 2da0      	MOV  R26,R0
0008c0 9508      	RET
                 
                 __DIVB21:
0008c1 d039      	RCALL __CHKSIGNB
0008c2 dff0      	RCALL __DIVB21U
0008c3 f40e      	BRTC __DIVB211
0008c4 95e1      	NEG  R30
                 __DIVB211:
0008c5 9508      	RET
                 
                 __DIVD21U:
0008c6 933f      	PUSH R19
0008c7 934f      	PUSH R20
0008c8 935f      	PUSH R21
0008c9 2400      	CLR  R0
0008ca 2411      	CLR  R1
0008cb 2744      	CLR  R20
0008cc 2755      	CLR  R21
0008cd e230      	LDI  R19,32
                 __DIVD21U1:
0008ce 0faa      	LSL  R26
0008cf 1fbb      	ROL  R27
0008d0 1f88      	ROL  R24
0008d1 1f99      	ROL  R25
0008d2 1c00      	ROL  R0
0008d3 1c11      	ROL  R1
0008d4 1f44      	ROL  R20
0008d5 1f55      	ROL  R21
0008d6 1a0e      	SUB  R0,R30
0008d7 0a1f      	SBC  R1,R31
0008d8 0b46      	SBC  R20,R22
0008d9 0b57      	SBC  R21,R23
0008da f428      	BRCC __DIVD21U2
0008db 0e0e      	ADD  R0,R30
0008dc 1e1f      	ADC  R1,R31
0008dd 1f46      	ADC  R20,R22
0008de 1f57      	ADC  R21,R23
0008df c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008e0 60a1      	SBR  R26,1
                 __DIVD21U3:
0008e1 953a      	DEC  R19
0008e2 f759      	BRNE __DIVD21U1
0008e3 01fd      	MOVW R30,R26
0008e4 01bc      	MOVW R22,R24
0008e5 01d0      	MOVW R26,R0
0008e6 01ca      	MOVW R24,R20
0008e7 915f      	POP  R21
0008e8 914f      	POP  R20
0008e9 913f      	POP  R19
0008ea 9508      	RET
                 
                 __MODB21:
0008eb 94e8      	CLT
0008ec ffa7      	SBRS R26,7
0008ed c002      	RJMP __MODB211
0008ee 95a1      	NEG  R26
0008ef 9468      	SET
                 __MODB211:
0008f0 fde7      	SBRC R30,7
0008f1 95e1      	NEG  R30
0008f2 dfc0      	RCALL __DIVB21U
0008f3 2fea      	MOV  R30,R26
0008f4 f40e      	BRTC __MODB212
0008f5 95e1      	NEG  R30
                 __MODB212:
0008f6 9508      	RET
                 
                 __MODD21U:
0008f7 dfce      	RCALL __DIVD21U
0008f8 01fd      	MOVW R30,R26
0008f9 01bc      	MOVW R22,R24
0008fa 9508      	RET
                 
                 __CHKSIGNB:
0008fb 94e8      	CLT
0008fc ffe7      	SBRS R30,7
0008fd c002      	RJMP __CHKSB1
0008fe 95e1      	NEG  R30
0008ff 9468      	SET
                 __CHKSB1:
000900 ffa7      	SBRS R26,7
000901 c004      	RJMP __CHKSB2
000902 95a1      	NEG  R26
000903 f800      	BLD  R0,0
000904 9403      	INC  R0
000905 fa00      	BST  R0,0
                 __CHKSB2:
000906 9508      	RET
                 
                 __GETW1P:
000907 91ed      	LD   R30,X+
000908 91fc      	LD   R31,X
000909 9711      	SBIW R26,1
00090a 9508      	RET
                 
                 __GETD1P:
00090b 91ed      	LD   R30,X+
00090c 91fd      	LD   R31,X+
00090d 916d      	LD   R22,X+
00090e 917c      	LD   R23,X
00090f 9713      	SBIW R26,3
000910 9508      	RET
                 
                 __GETD1S0:
000911 81e8      	LD   R30,Y
000912 81f9      	LDD  R31,Y+1
000913 816a      	LDD  R22,Y+2
000914 817b      	LDD  R23,Y+3
000915 9508      	RET
                 
                 __GETD2S0:
000916 81a8      	LD   R26,Y
000917 81b9      	LDD  R27,Y+1
000918 818a      	LDD  R24,Y+2
000919 819b      	LDD  R25,Y+3
00091a 9508      	RET
                 
                 __PUTD1S0:
00091b 83e8      	ST   Y,R30
00091c 83f9      	STD  Y+1,R31
00091d 836a      	STD  Y+2,R22
00091e 837b      	STD  Y+3,R23
00091f 9508      	RET
                 
                 __PUTPARD1:
000920 937a      	ST   -Y,R23
000921 936a      	ST   -Y,R22
000922 93fa      	ST   -Y,R31
000923 93ea      	ST   -Y,R30
000924 9508      	RET
                 
                 __PUTPARD2:
000925 939a      	ST   -Y,R25
000926 938a      	ST   -Y,R24
000927 93ba      	ST   -Y,R27
000928 93aa      	ST   -Y,R26
000929 9508      	RET
                 
                 __SWAPD12:
00092a 2e18      	MOV  R1,R24
00092b 2f86      	MOV  R24,R22
00092c 2d61      	MOV  R22,R1
00092d 2e19      	MOV  R1,R25
00092e 2f97      	MOV  R25,R23
00092f 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000930 2e1b      	MOV  R1,R27
000931 2fbf      	MOV  R27,R31
000932 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000933 2e1a      	MOV  R1,R26
000934 2fae      	MOV  R26,R30
000935 2de1      	MOV  R30,R1
000936 9508      	RET
                 
                 __CPD10:
000937 9730      	SBIW R30,0
000938 4060      	SBCI R22,0
000939 4070      	SBCI R23,0
00093a 9508      	RET
                 
                 __SAVELOCR6:
00093b 935a      	ST   -Y,R21
                 __SAVELOCR5:
00093c 934a      	ST   -Y,R20
                 __SAVELOCR4:
00093d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00093e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00093f 931a      	ST   -Y,R17
000940 930a      	ST   -Y,R16
000941 9508      	RET
                 
                 __LOADLOCR6:
000942 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000943 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000944 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000945 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000946 8119      	LDD  R17,Y+1
000947 8108      	LD   R16,Y
000948 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  63 r18:  48 r19:  35 r20:  50 r21:  90 r22: 113 r23:  98 
r24:  78 r25:  64 r26: 216 r27:  97 r28:  33 r29:   1 r30: 382 r31: 146 
x  :  40 y  : 401 z  :  25 
Registers used: 25 out of 35 (71.4%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  33 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  48 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 171 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  82 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  23 ld    :  51 ldd   : 213 ldi   : 203 
lds   :   0 lpm   :  14 lsl   :  14 lsr   :   3 mov   :  84 movw  :  52 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  16 pop   :  22 push  :  22 rcall :  85 ret   :  89 
reti  :   0 rjmp  : 139 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  31 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  98 std   :  92 sts   :   2 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001292   4710     44   4754   16384  29.0%
[.dseg] 0x000060 0x000168      0      8      8    1024   0.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
